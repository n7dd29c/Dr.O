import {
  generateTreeItemIdAttribute,
  idSelectors,
  useStore,
  useTreeViewContext
} from "./chunk-ULBSXDUD.js";
import {
  require_prop_types
} from "./chunk-4CGZEHSF.js";
import {
  require_jsx_runtime
} from "./chunk-NRBATONI.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@mui/x-tree-view/esm/TreeItemProvider/TreeItemProvider.js
var React = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function TreeItemProvider(props) {
  const {
    children,
    itemId,
    id
  } = props;
  const {
    wrapItem,
    instance,
    store
  } = useTreeViewContext();
  const treeId = useStore(store, idSelectors.treeId);
  const idAttribute = generateTreeItemIdAttribute({
    itemId,
    treeId,
    id
  });
  return (0, import_jsx_runtime.jsx)(React.Fragment, {
    children: wrapItem({
      children,
      itemId,
      instance,
      idAttribute
    })
  });
}
true ? TreeItemProvider.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  children: import_prop_types.default.node,
  id: import_prop_types.default.string,
  itemId: import_prop_types.default.string.isRequired
} : void 0;

export {
  TreeItemProvider
};
//# sourceMappingURL=chunk-Z2NB7X4T.js.map
