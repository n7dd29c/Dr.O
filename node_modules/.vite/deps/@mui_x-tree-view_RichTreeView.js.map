{
  "version": 3,
  "sources": ["../../@mui/x-tree-view/esm/RichTreeView/RichTreeView.js", "../../@mui/material/esm/Alert/Alert.js", "../../@mui/material/esm/Alert/alertClasses.js", "../../@mui/material/esm/internal/svg-icons/SuccessOutlined.js", "../../@mui/material/esm/internal/svg-icons/ReportProblemOutlined.js", "../../@mui/material/esm/internal/svg-icons/ErrorOutline.js", "../../@mui/material/esm/internal/svg-icons/InfoOutlined.js", "../../@mui/x-tree-view/esm/RichTreeView/richTreeViewClasses.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useTreeView.js", "../../@base-ui-components/utils/esm/useRefWithInit.js", "../../@mui/x-tree-view/esm/internals/corePlugins/useTreeViewInstanceEvents/useTreeViewInstanceEvents.js", "../../@mui/x-internals/esm/EventManager/EventManager.js", "../../@mui/x-tree-view/esm/internals/corePlugins/useTreeViewOptionalPlugins/useTreeViewOptionalPlugins.js", "../../@mui/x-tree-view/esm/internals/corePlugins/corePlugins.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useExtractPluginParamsFromProps.js", "../../@mui/x-tree-view/esm/internals/useTreeView/useTreeViewBuildContext.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewKeyboardNavigation/useTreeViewKeyboardNavigation.js", "../../@mui/x-tree-view/esm/RichTreeView/RichTreeView.plugins.js", "../../@mui/x-tree-view/esm/internals/components/RichTreeViewItems.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '@mui/x-internals/store';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { getRichTreeViewUtilityClass } from \"./richTreeViewClasses.js\";\nimport { styled, createUseThemeProps } from \"../internals/zero-styled/index.js\";\nimport { useTreeView } from \"../internals/useTreeView/index.js\";\nimport { TreeViewProvider } from \"../internals/TreeViewProvider/index.js\";\nimport { RICH_TREE_VIEW_PLUGINS } from \"./RichTreeView.plugins.js\";\nimport { RichTreeViewItems } from \"../internals/components/RichTreeViewItems.js\";\nimport { itemsSelectors } from \"../internals/plugins/useTreeViewItems/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useThemeProps = createUseThemeProps('MuiRichTreeView');\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      root: ['root'],\n      item: ['item'],\n      itemContent: ['itemContent'],\n      itemGroupTransition: ['itemGroupTransition'],\n      itemIconContainer: ['itemIconContainer'],\n      itemLabel: ['itemLabel'],\n      itemLabelInput: ['itemLabelInput'],\n      itemCheckbox: ['itemCheckbox']\n      // itemDragAndDropOverlay: ['itemDragAndDropOverlay'], => feature not available on this component\n      // itemErrorIcon: ['itemErrorIcon'], => feature not available on this component\n    };\n    return composeClasses(slots, getRichTreeViewUtilityClass, classes);\n  }, [classes]);\n};\nexport const RichTreeViewRoot = styled('ul', {\n  name: 'MuiRichTreeView',\n  slot: 'Root'\n})({\n  padding: 0,\n  margin: 0,\n  listStyle: 'none',\n  outline: 0,\n  position: 'relative'\n});\n/**\n *\n * Demos:\n *\n * - [Tree View](https://mui.com/x/react-tree-view/)\n *\n * API:\n *\n * - [RichTreeView API](https://mui.com/x/api/tree-view/rich-tree-view/)\n */\nconst RichTreeView = /*#__PURE__*/React.forwardRef(function RichTreeView(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRichTreeView'\n  });\n  const {\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.children != null) {\n      warnOnce(['MUI X: The Rich Tree View component does not support JSX children.', 'If you want to add items, you need to use the `items` prop.', 'Check the documentation for more details: https://mui.com/x/react-tree-view/rich-tree-view/items/.']);\n    }\n  }\n  const {\n    getRootProps,\n    contextValue\n  } = useTreeView({\n    plugins: RICH_TREE_VIEW_PLUGINS,\n    rootRef: ref,\n    props: other\n  });\n  const isLoading = useStore(contextValue.store, itemsSelectors.isLoading);\n  const treeViewError = useStore(contextValue.store, itemsSelectors.error);\n  const classes = useUtilityClasses(props);\n  const Root = slots?.root ?? RichTreeViewRoot;\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps?.root,\n    className: classes.root,\n    getSlotProps: getRootProps,\n    ownerState: props\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsx(Typography, {\n      children: \"Loading...\"\n    });\n  }\n  if (treeViewError) {\n    return /*#__PURE__*/_jsx(Alert, {\n      severity: \"error\",\n      children: treeViewError.message\n    });\n  }\n  return /*#__PURE__*/_jsx(TreeViewProvider, {\n    contextValue: contextValue,\n    classes: classes,\n    slots: slots,\n    slotProps: slotProps,\n    children: /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(RichTreeViewItems, {\n        slots: slots,\n        slotProps: slotProps\n      })\n    }))\n  });\n});\nif (process.env.NODE_ENV !== \"production\") RichTreeView.displayName = \"RichTreeView\";\nprocess.env.NODE_ENV !== \"production\" ? RichTreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Tree View manipulation. Can be instantiated with `useTreeViewApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.shape({\n      focusItem: PropTypes.func,\n      getItem: PropTypes.func,\n      getItemDOMElement: PropTypes.func,\n      getItemOrderedChildrenIds: PropTypes.func,\n      getItemTree: PropTypes.func,\n      getParentId: PropTypes.func,\n      isItemExpanded: PropTypes.func,\n      setEditedItem: PropTypes.func,\n      setIsItemDisabled: PropTypes.func,\n      setItemExpansion: PropTypes.func,\n      setItemSelection: PropTypes.func,\n      updateItemLabel: PropTypes.func\n    })\n  }),\n  /**\n   * If `true`, the Tree View renders a checkbox at the left of its label that allows selecting it.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  /**\n   * Expanded item ids.\n   * Used when the item's expansion is not controlled.\n   * @default []\n   */\n  defaultExpandedItems: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Selected item ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   * @default []\n   */\n  defaultSelectedItems: PropTypes.any,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true` selection is disabled.\n   * @default false\n   */\n  disableSelection: PropTypes.bool,\n  /**\n   * Expanded item ids.\n   * Used when the item's expansion is controlled.\n   */\n  expandedItems: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * The slot that triggers the item's expansion when clicked.\n   * @default 'content'\n   */\n  expansionTrigger: PropTypes.oneOf(['content', 'iconContainer']),\n  /**\n   * Used to determine the children of a given item.\n   *\n   * @template R\n   * @param {R} item The item to check.\n   * @returns {R[]} The children of the item.\n   * @default (item) => item.children\n   */\n  getItemChildren: PropTypes.func,\n  /**\n   * Used to determine the id of a given item.\n   *\n   * @template R\n   * @param {R} item The item to check.\n   * @returns {string} The id of the item.\n   * @default (item) => item.id\n   */\n  getItemId: PropTypes.func,\n  /**\n   * Used to determine the string label for a given item.\n   *\n   * @template R\n   * @param {R} item The item to check.\n   * @returns {string} The label of the item.\n   * @default (item) => item.label\n   */\n  getItemLabel: PropTypes.func,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * Used to determine if a given item should be disabled.\n   * @template R\n   * @param {R} item The item to check.\n   * @returns {boolean} `true` if the item should be disabled.\n   */\n  isItemDisabled: PropTypes.func,\n  /**\n   * Determine if a given item can be edited.\n   * @template R\n   * @param {R} item The item to check.\n   * @returns {boolean} `true` if the item can be edited.\n   * @default () => false\n   */\n  isItemEditable: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  /**\n   * Horizontal indentation between an item and its children.\n   * Examples: 24, \"24px\", \"2rem\", \"2em\".\n   * @default 12px\n   */\n  itemChildrenIndentation: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  items: PropTypes.array.isRequired,\n  /**\n   * If `true`, `ctrl` and `shift` will trigger multiselect.\n   * @default false\n   */\n  multiSelect: PropTypes.bool,\n  /**\n   * Callback fired when Tree Items are expanded/collapsed.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n   * @param {array} itemIds The ids of the expanded items.\n   */\n  onExpandedItemsChange: PropTypes.func,\n  /**\n   * Callback fired when the `content` slot of a given Tree Item is clicked.\n   * @param {React.MouseEvent} event The DOM event that triggered the change.\n   * @param {string} itemId The id of the focused item.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * Callback fired when a Tree Item is expanded or collapsed.\n   * @param {React.SyntheticEvent | null} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n   * @param {array} itemId The itemId of the modified item.\n   * @param {array} isExpanded `true` if the item has just been expanded, `false` if it has just been collapsed.\n   */\n  onItemExpansionToggle: PropTypes.func,\n  /**\n   * Callback fired when a given Tree Item is focused.\n   * @param {React.SyntheticEvent | null} event The DOM event that triggered the change. **Warning**: This is a generic event not a focus event.\n   * @param {string} itemId The id of the focused item.\n   */\n  onItemFocus: PropTypes.func,\n  /**\n   * Callback fired when the label of an item changes.\n   * @param {TreeViewItemId} itemId The id of the item that was edited.\n   * @param {string} newLabel The new label of the items.\n   */\n  onItemLabelChange: PropTypes.func,\n  /**\n   * Callback fired when a Tree Item is selected or deselected.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n   * @param {array} itemId The itemId of the modified item.\n   * @param {array} isSelected `true` if the item has just been selected, `false` if it has just been deselected.\n   */\n  onItemSelectionToggle: PropTypes.func,\n  /**\n   * Callback fired when Tree Items are selected/deselected.\n   * @param {React.SyntheticEvent} event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n   * @param {string[] | string} itemIds The ids of the selected items.\n   * When `multiSelect` is `true`, this is an array of strings; when false (default) a string.\n   */\n  onSelectedItemsChange: PropTypes.func,\n  /**\n   * Selected item ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selectedItems: PropTypes.any,\n  /**\n   * When `selectionPropagation.descendants` is set to `true`.\n   *\n   * - Selecting a parent selects all its descendants automatically.\n   * - Deselecting a parent deselects all its descendants automatically.\n   *\n   * When `selectionPropagation.parents` is set to `true`.\n   *\n   * - Selecting all the descendants of a parent selects the parent automatically.\n   * - Deselecting a descendant of a selected parent deselects the parent automatically.\n   *\n   * Only works when `multiSelect` is `true`.\n   * On the <SimpleTreeView />, only the expanded items are considered (since the collapsed item are not passed to the Tree View component at all)\n   *\n   * @default { parents: false, descendants: false }\n   */\n  selectionPropagation: PropTypes.shape({\n    descendants: PropTypes.bool,\n    parents: PropTypes.bool\n  }),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { RichTreeView };", "'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? theme.darken : theme.lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? theme.lighten : theme.darken;\n  return {\n    ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: {\n        fontWeight: theme.typography.fontWeightMedium,\n        ...(theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n        } : {\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n          color: theme.palette.getContrastText(theme.palette[color].main)\n        })\n      }\n    }))]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon'\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message'\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action'\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AlertRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      role,\n      elevation: 0\n    }\n  });\n  const [IconSlot, iconSlotProps] = useSlot('icon', {\n    className: classes.icon,\n    elementType: AlertIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  const [MessageSlot, messageSlotProps] = useSlot('message', {\n    className: classes.message,\n    elementType: AlertMessage,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: AlertAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [icon !== false ? /*#__PURE__*/_jsx(IconSlot, {\n      ...iconSlotProps,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(MessageSlot, {\n      ...messageSlotProps,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    message: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType,\n    icon: PropTypes.elementType,\n    message: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;", "import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;", "'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');", "'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');", "'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');", "'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');", "import generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nexport function getRichTreeViewUtilityClass(slot) {\n  return generateUtilityClass('MuiRichTreeView', slot);\n}\nexport const richTreeViewClasses = generateUtilityClasses('MuiRichTreeView', ['root', 'item', 'itemContent', 'itemGroupTransition', 'itemIconContainer', 'itemLabel', 'itemCheckbox', 'itemLabelInput']);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRefWithInit } from '@base-ui-components/utils/useRefWithInit';\nimport { Store } from '@mui/x-internals/store';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { TREE_VIEW_CORE_PLUGINS } from \"../corePlugins/index.js\";\nimport { useExtractPluginParamsFromProps } from \"./useExtractPluginParamsFromProps.js\";\nimport { useTreeViewBuildContext } from \"./useTreeViewBuildContext.js\";\nfunction initializeInputApiRef(inputApiRef) {\n  if (inputApiRef.current == null) {\n    inputApiRef.current = {};\n  }\n  return inputApiRef;\n}\nexport function useTreeViewApiInitialization(inputApiRef) {\n  const fallbackPublicApiRef = React.useRef({});\n  if (inputApiRef) {\n    return initializeInputApiRef(inputApiRef);\n  }\n  return fallbackPublicApiRef;\n}\n\n/**\n * This is the main hook that sets the plugin system up for the tree-view.\n *\n * It manages the data used to create the tree-view.\n *\n * @param plugins All the plugins that will be used in the tree-view.\n * @param props The props passed to the tree-view.\n * @param rootRef The ref of the root element.\n */\nexport const useTreeView = ({\n  plugins: inPlugins,\n  rootRef,\n  props\n}) => {\n  const plugins = React.useMemo(() => [...TREE_VIEW_CORE_PLUGINS, ...inPlugins], [inPlugins]);\n  const {\n    pluginParams,\n    forwardedProps,\n    apiRef\n  } = useExtractPluginParamsFromProps({\n    plugins,\n    props\n  });\n  const instance = useRefWithInit(() => ({})).current;\n  const publicAPI = useTreeViewApiInitialization(apiRef);\n  const innerRootRef = React.useRef(null);\n  const handleRootRef = useForkRef(innerRootRef, rootRef);\n  const store = useRefWithInit(() => {\n    const initialState = {};\n    for (const plugin of plugins) {\n      if (plugin.getInitialState) {\n        Object.assign(initialState, plugin.getInitialState(pluginParams));\n      }\n    }\n    return new Store(initialState);\n  }).current;\n  const contextValue = useTreeViewBuildContext({\n    plugins,\n    instance,\n    publicAPI: publicAPI.current,\n    store,\n    rootRef: innerRootRef\n  });\n  const rootPropsGetters = [];\n  const runPlugin = plugin => {\n    const pluginResponse = plugin({\n      instance,\n      params: pluginParams,\n      rootRef: innerRootRef,\n      plugins,\n      store\n    });\n    if (pluginResponse.getRootProps) {\n      rootPropsGetters.push(pluginResponse.getRootProps);\n    }\n    if (pluginResponse.publicAPI) {\n      Object.assign(publicAPI.current, pluginResponse.publicAPI);\n    }\n    if (pluginResponse.instance) {\n      Object.assign(instance, pluginResponse.instance);\n    }\n  };\n  plugins.forEach(runPlugin);\n  const getRootProps = (otherHandlers = {}) => {\n    const rootProps = _extends({\n      role: 'tree'\n    }, forwardedProps, otherHandlers, {\n      ref: handleRootRef\n    });\n    rootPropsGetters.forEach(rootPropsGetter => {\n      Object.assign(rootProps, rootPropsGetter(otherHandlers));\n    });\n    return rootProps;\n  };\n  return {\n    getRootProps,\n    rootRef: handleRootRef,\n    contextValue\n  };\n};", "'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useRefWithInit(sortColumns, columns)\n */\n\nexport function useRefWithInit(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}", "'use client';\n\nimport * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport const useTreeViewInstanceEvents = () => {\n  const [eventManager] = React.useState(() => new EventManager());\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    eventManager.emit(name, params, event);\n  }, [eventManager]);\n  const subscribeEvent = React.useCallback((event, handler) => {\n    eventManager.on(event, handler);\n    return () => {\n      eventManager.removeListener(event, handler);\n    };\n  }, [eventManager]);\n  return {\n    instance: {\n      $$publishEvent: publishEvent,\n      $$subscribeEvent: subscribeEvent\n    }\n  };\n};\nuseTreeViewInstanceEvents.params = {};", "// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  maxListeners = 20;\n  warnOnce = false;\n  events = {};\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}", "export const useTreeViewOptionalPlugins = ({\n  plugins\n}) => {\n  const pluginSet = new Set(plugins);\n  const getAvailablePlugins = () => pluginSet;\n  return {\n    instance: {\n      getAvailablePlugins\n    }\n  };\n};\nuseTreeViewOptionalPlugins.params = {};", "import { useTreeViewInstanceEvents } from \"./useTreeViewInstanceEvents/index.js\";\nimport { useTreeViewOptionalPlugins } from \"./useTreeViewOptionalPlugins/index.js\";\nimport { useTreeViewId } from \"./useTreeViewId/index.js\";\n/**\n * Internal plugins that create the tools used by the other plugins.\n * These plugins are used by the Tree View components.\n */\nexport const TREE_VIEW_CORE_PLUGINS = [useTreeViewInstanceEvents, useTreeViewOptionalPlugins, useTreeViewId];", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"apiRef\"];\nimport * as React from 'react';\nexport const useExtractPluginParamsFromProps = _ref => {\n  let {\n      props: {\n        apiRef\n      },\n      plugins\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref.props, _excluded);\n  const paramsLookup = React.useMemo(() => {\n    const tempParamsLookup = {};\n    plugins.forEach(plugin => {\n      Object.assign(tempParamsLookup, plugin.params);\n    });\n    return tempParamsLookup;\n  }, [plugins]);\n  const {\n    forwardedProps,\n    pluginParams\n  } = React.useMemo(() => {\n    const tempPluginParams = {};\n    const tempForwardedProps = {};\n    Object.keys(props).forEach(propName => {\n      const prop = props[propName];\n      if (paramsLookup[propName]) {\n        tempPluginParams[propName] = prop;\n      } else {\n        tempForwardedProps[propName] = prop;\n      }\n    });\n    const pluginParamsWithDefaults = plugins.reduce((acc, plugin) => {\n      if (plugin.applyDefaultValuesToParams) {\n        return plugin.applyDefaultValuesToParams({\n          params: acc\n        });\n      }\n      return acc;\n    }, tempPluginParams);\n    return {\n      forwardedProps: tempForwardedProps,\n      pluginParams: pluginParamsWithDefaults\n    };\n  }, [plugins, props, paramsLookup]);\n  return {\n    forwardedProps,\n    pluginParams,\n    apiRef\n  };\n};", "import * as React from 'react';\nexport const useTreeViewBuildContext = parameters => {\n  const {\n    plugins,\n    instance,\n    publicAPI,\n    store,\n    rootRef\n  } = parameters;\n  const runItemPlugins = React.useCallback(itemPluginProps => {\n    let finalRootRef = null;\n    let finalContentRef = null;\n    const pluginPropEnhancers = [];\n    const pluginPropEnhancersNames = {};\n    plugins.forEach(plugin => {\n      if (!plugin.itemPlugin) {\n        return;\n      }\n      const itemPluginResponse = plugin.itemPlugin({\n        props: itemPluginProps,\n        rootRef: finalRootRef,\n        contentRef: finalContentRef\n      });\n      if (itemPluginResponse?.rootRef) {\n        finalRootRef = itemPluginResponse.rootRef;\n      }\n      if (itemPluginResponse?.contentRef) {\n        finalContentRef = itemPluginResponse.contentRef;\n      }\n      if (itemPluginResponse?.propsEnhancers) {\n        pluginPropEnhancers.push(itemPluginResponse.propsEnhancers);\n\n        // Prepare a list of all the slots which are enhanced by at least one plugin\n        Object.keys(itemPluginResponse.propsEnhancers).forEach(propsEnhancerName => {\n          pluginPropEnhancersNames[propsEnhancerName] = true;\n        });\n      }\n    });\n    const resolvePropsEnhancer = currentSlotName => currentSlotParams => {\n      const enhancedProps = {};\n      pluginPropEnhancers.forEach(propsEnhancersForCurrentPlugin => {\n        const propsEnhancerForCurrentPluginAndSlot = propsEnhancersForCurrentPlugin[currentSlotName];\n        if (propsEnhancerForCurrentPluginAndSlot != null) {\n          Object.assign(enhancedProps, propsEnhancerForCurrentPluginAndSlot(currentSlotParams));\n        }\n      });\n      return enhancedProps;\n    };\n    const propsEnhancers = Object.fromEntries(Object.keys(pluginPropEnhancersNames).map(propEnhancerName => [propEnhancerName, resolvePropsEnhancer(propEnhancerName)]));\n    return {\n      contentRef: finalContentRef,\n      rootRef: finalRootRef,\n      propsEnhancers\n    };\n  }, [plugins]);\n  const wrapItem = React.useCallback(({\n    itemId,\n    children,\n    idAttribute\n  }) => {\n    let finalChildren = children;\n    // The wrappers are reversed to ensure that the first wrapper is the outermost one.\n    for (let i = plugins.length - 1; i >= 0; i -= 1) {\n      const plugin = plugins[i];\n      if (plugin.wrapItem) {\n        finalChildren = plugin.wrapItem({\n          instance,\n          itemId,\n          children: finalChildren,\n          idAttribute\n        });\n      }\n    }\n    return finalChildren;\n  }, [plugins, instance]);\n  const wrapRoot = React.useCallback(({\n    children\n  }) => {\n    let finalChildren = children;\n    // The wrappers are reversed to ensure that the first wrapper is the outermost one.\n    for (let i = plugins.length - 1; i >= 0; i -= 1) {\n      const plugin = plugins[i];\n      if (plugin.wrapRoot) {\n        finalChildren = plugin.wrapRoot({\n          children: finalChildren\n        });\n      }\n    }\n    return finalChildren;\n  }, [plugins]);\n  return React.useMemo(() => ({\n    runItemPlugins,\n    wrapItem,\n    wrapRoot,\n    instance,\n    publicAPI,\n    store,\n    rootRef\n  }), [runItemPlugins, wrapItem, wrapRoot, instance, publicAPI, store, rootRef]);\n};", "'use client';\n\nimport * as React from 'react';\nimport { useStore } from '@mui/x-internals/store';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { getFirstNavigableItem, getLastNavigableItem, getNextNavigableItem, getPreviousNavigableItem, isTargetInDescendants } from \"../../utils/tree.js\";\nimport { hasPlugin } from \"../../utils/plugins.js\";\nimport { useTreeViewLabel } from \"../useTreeViewLabel/index.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { labelSelectors } from \"../useTreeViewLabel/useTreeViewLabel.selectors.js\";\nimport { selectionSelectors } from \"../useTreeViewSelection/useTreeViewSelection.selectors.js\";\nimport { expansionSelectors } from \"../useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nfunction isPrintableKey(string) {\n  return !!string && string.length === 1 && !!string.match(/\\S/);\n}\nexport const useTreeViewKeyboardNavigation = ({\n  instance,\n  store,\n  params\n}) => {\n  const isRtl = useRtl();\n  const firstCharMap = React.useRef({});\n  const updateFirstCharMap = useEventCallback(callback => {\n    firstCharMap.current = callback(firstCharMap.current);\n  });\n  const itemMetaLookup = useStore(store, itemsSelectors.itemMetaLookup);\n  React.useEffect(() => {\n    if (instance.areItemUpdatesPrevented()) {\n      return;\n    }\n    const newFirstCharMap = {};\n    const processItem = item => {\n      newFirstCharMap[item.id] = item.label.substring(0, 1).toLowerCase();\n    };\n    Object.values(itemMetaLookup).forEach(processItem);\n    firstCharMap.current = newFirstCharMap;\n  }, [itemMetaLookup, params.getItemId, instance]);\n  const getFirstMatchingItem = (itemId, query) => {\n    const cleanQuery = query.toLowerCase();\n    const getNextItem = itemIdToCheck => {\n      const nextItemId = getNextNavigableItem(store.state, itemIdToCheck);\n      // We reached the end of the tree, check from the beginning\n      if (nextItemId === null) {\n        return getFirstNavigableItem(store.state);\n      }\n      return nextItemId;\n    };\n    let matchingItemId = null;\n    let currentItemId = getNextItem(itemId);\n    const checkedItems = {};\n    // The \"!checkedItems[currentItemId]\" condition avoids an infinite loop when there is no matching item.\n    while (matchingItemId == null && !checkedItems[currentItemId]) {\n      if (firstCharMap.current[currentItemId] === cleanQuery) {\n        matchingItemId = currentItemId;\n      } else {\n        checkedItems[currentItemId] = true;\n        currentItemId = getNextItem(currentItemId);\n      }\n    }\n    return matchingItemId;\n  };\n  const canToggleItemSelection = itemId => selectionSelectors.enabled(store.state) && !itemsSelectors.isItemDisabled(store.state, itemId);\n  const canToggleItemExpansion = itemId => {\n    return !itemsSelectors.isItemDisabled(store.state, itemId) && expansionSelectors.isItemExpandable(store.state, itemId);\n  };\n\n  // ARIA specification: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/#keyboardinteraction\n  const handleItemKeyDown = async (event, itemId) => {\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (event.altKey || isTargetInDescendants(event.target, event.currentTarget)) {\n      return;\n    }\n    const ctrlPressed = event.ctrlKey || event.metaKey;\n    const key = event.key;\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n\n    // eslint-disable-next-line default-case\n    switch (true) {\n      // Select the item when pressing \"Space\"\n      case key === ' ' && canToggleItemSelection(itemId):\n        {\n          event.preventDefault();\n          if (isMultiSelectEnabled && event.shiftKey) {\n            instance.expandSelectionRange(event, itemId);\n          } else {\n            instance.setItemSelection({\n              event,\n              itemId,\n              keepExistingSelection: isMultiSelectEnabled,\n              shouldBeSelected: undefined\n            });\n          }\n          break;\n        }\n\n      // If the focused item has children, we expand it.\n      // If the focused item has no children, we select it.\n      case key === 'Enter':\n        {\n          if (hasPlugin(instance, useTreeViewLabel) && labelSelectors.isItemEditable(store.state, itemId) && !labelSelectors.isItemBeingEdited(store.state, itemId)) {\n            instance.setEditedItem(itemId);\n          } else if (canToggleItemExpansion(itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          } else if (canToggleItemSelection(itemId)) {\n            if (isMultiSelectEnabled) {\n              event.preventDefault();\n              instance.setItemSelection({\n                event,\n                itemId,\n                keepExistingSelection: true\n              });\n            } else if (!selectionSelectors.isItemSelected(store.state, itemId)) {\n              instance.setItemSelection({\n                event,\n                itemId\n              });\n              event.preventDefault();\n            }\n          }\n          break;\n        }\n\n      // Focus the next focusable item\n      case key === 'ArrowDown':\n        {\n          const nextItem = getNextNavigableItem(store.state, itemId);\n          if (nextItem) {\n            event.preventDefault();\n            instance.focusItem(event, nextItem);\n\n            // Multi select behavior when pressing Shift + ArrowDown\n            // Toggles the selection state of the next item\n            if (isMultiSelectEnabled && event.shiftKey && canToggleItemSelection(nextItem)) {\n              instance.selectItemFromArrowNavigation(event, itemId, nextItem);\n            }\n          }\n          break;\n        }\n\n      // Focuses the previous focusable item\n      case key === 'ArrowUp':\n        {\n          const previousItem = getPreviousNavigableItem(store.state, itemId);\n          if (previousItem) {\n            event.preventDefault();\n            instance.focusItem(event, previousItem);\n\n            // Multi select behavior when pressing Shift + ArrowUp\n            // Toggles the selection state of the previous item\n            if (isMultiSelectEnabled && event.shiftKey && canToggleItemSelection(previousItem)) {\n              instance.selectItemFromArrowNavigation(event, itemId, previousItem);\n            }\n          }\n          break;\n        }\n\n      // If the focused item is expanded, we move the focus to its first child\n      // If the focused item is collapsed and has children, we expand it\n      case key === 'ArrowRight' && !isRtl || key === 'ArrowLeft' && isRtl:\n        {\n          if (ctrlPressed) {\n            return;\n          }\n          if (expansionSelectors.isItemExpanded(store.state, itemId)) {\n            const nextItemId = getNextNavigableItem(store.state, itemId);\n            if (nextItemId) {\n              instance.focusItem(event, nextItemId);\n              event.preventDefault();\n            }\n          } else if (canToggleItemExpansion(itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          }\n          break;\n        }\n\n      // If the focused item is expanded, we collapse it\n      // If the focused item is collapsed and has a parent, we move the focus to this parent\n      case key === 'ArrowLeft' && !isRtl || key === 'ArrowRight' && isRtl:\n        {\n          if (ctrlPressed) {\n            return;\n          }\n          if (canToggleItemExpansion(itemId) && expansionSelectors.isItemExpanded(store.state, itemId)) {\n            instance.setItemExpansion({\n              event,\n              itemId\n            });\n            event.preventDefault();\n          } else {\n            const parent = itemsSelectors.itemParentId(store.state, itemId);\n            if (parent) {\n              instance.focusItem(event, parent);\n              event.preventDefault();\n            }\n          }\n          break;\n        }\n\n      // Focuses the first item in the tree\n      case key === 'Home':\n        {\n          // Multi select behavior when pressing Ctrl + Shift + Home\n          // Selects the focused item and all items up to the first item.\n          if (canToggleItemSelection(itemId) && isMultiSelectEnabled && ctrlPressed && event.shiftKey) {\n            instance.selectRangeFromStartToItem(event, itemId);\n          } else {\n            instance.focusItem(event, getFirstNavigableItem(store.state));\n          }\n          event.preventDefault();\n          break;\n        }\n\n      // Focuses the last item in the tree\n      case key === 'End':\n        {\n          // Multi select behavior when pressing Ctrl + Shirt + End\n          // Selects the focused item and all the items down to the last item.\n          if (canToggleItemSelection(itemId) && isMultiSelectEnabled && ctrlPressed && event.shiftKey) {\n            instance.selectRangeFromItemToEnd(event, itemId);\n          } else {\n            instance.focusItem(event, getLastNavigableItem(store.state));\n          }\n          event.preventDefault();\n          break;\n        }\n\n      // Expand all siblings that are at the same level as the focused item\n      case key === '*':\n        {\n          instance.expandAllSiblings(event, itemId);\n          event.preventDefault();\n          break;\n        }\n\n      // Multi select behavior when pressing Ctrl + a\n      // Selects all the items\n      case String.fromCharCode(event.keyCode) === 'A' && ctrlPressed && isMultiSelectEnabled && selectionSelectors.enabled(store.state):\n        {\n          instance.selectAllNavigableItems(event);\n          event.preventDefault();\n          break;\n        }\n\n      // Type-ahead\n      // TODO: Support typing multiple characters\n      case !ctrlPressed && !event.shiftKey && isPrintableKey(key):\n        {\n          const matchingItem = getFirstMatchingItem(itemId, key);\n          if (matchingItem != null) {\n            instance.focusItem(event, matchingItem);\n            event.preventDefault();\n          }\n          break;\n        }\n    }\n  };\n  return {\n    instance: {\n      updateFirstCharMap,\n      handleItemKeyDown\n    }\n  };\n};\nuseTreeViewKeyboardNavigation.params = {};", "import { useTreeViewItems } from \"../internals/plugins/useTreeViewItems/index.js\";\nimport { useTreeViewExpansion } from \"../internals/plugins/useTreeViewExpansion/index.js\";\nimport { useTreeViewSelection } from \"../internals/plugins/useTreeViewSelection/index.js\";\nimport { useTreeViewFocus } from \"../internals/plugins/useTreeViewFocus/index.js\";\nimport { useTreeViewKeyboardNavigation } from \"../internals/plugins/useTreeViewKeyboardNavigation/index.js\";\nimport { useTreeViewLabel } from \"../internals/plugins/useTreeViewLabel/index.js\";\nexport const RICH_TREE_VIEW_PLUGINS = [useTreeViewItems, useTreeViewExpansion, useTreeViewSelection, useTreeViewFocus, useTreeViewKeyboardNavigation, useTreeViewLabel];\n\n// We can't infer this type from the plugin, otherwise we would lose the generics.", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"ownerState\"];\nimport * as React from 'react';\nimport { useStore } from '@mui/x-internals/store';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { TreeItem } from \"../../TreeItem/index.js\";\nimport { itemsSelectors } from \"../plugins/useTreeViewItems/index.js\";\nimport { useTreeViewContext } from \"../TreeViewProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RichTreeViewItemsContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") RichTreeViewItemsContext.displayName = \"RichTreeViewItemsContext\";\nconst WrappedTreeItem = /*#__PURE__*/React.memo(function WrappedTreeItem({\n  itemSlot,\n  itemSlotProps,\n  itemId\n}) {\n  const renderItemForRichTreeView = React.useContext(RichTreeViewItemsContext);\n  const {\n    store\n  } = useTreeViewContext();\n  const itemMeta = useStore(store, itemsSelectors.itemMeta, itemId);\n  const children = useStore(store, itemsSelectors.itemOrderedChildrenIds, itemId);\n  const Item = itemSlot ?? TreeItem;\n  const _useSlotProps = useSlotProps({\n      elementType: Item,\n      externalSlotProps: itemSlotProps,\n      additionalProps: {\n        label: itemMeta?.label,\n        id: itemMeta?.idAttribute,\n        itemId\n      },\n      ownerState: {\n        itemId,\n        label: itemMeta?.label\n      }\n    }),\n    itemProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded);\n  return /*#__PURE__*/_jsx(Item, _extends({}, itemProps, {\n    children: children?.map(renderItemForRichTreeView)\n  }));\n}, fastObjectShallowCompare);\nif (process.env.NODE_ENV !== \"production\") WrappedTreeItem.displayName = \"WrappedTreeItem\";\nexport function RichTreeViewItems(props) {\n  const {\n    slots,\n    slotProps\n  } = props;\n  const {\n    store\n  } = useTreeViewContext();\n  const itemSlot = slots?.item;\n  const itemSlotProps = slotProps?.item;\n  const items = useStore(store, itemsSelectors.itemOrderedChildrenIds, null);\n  const renderItem = React.useCallback(itemId => {\n    return /*#__PURE__*/_jsx(WrappedTreeItem, {\n      itemSlot: itemSlot,\n      itemSlotProps: itemSlotProps,\n      itemId: itemId\n    }, itemId);\n  }, [itemSlot, itemSlotProps]);\n  return /*#__PURE__*/_jsx(RichTreeViewItemsContext.Provider, {\n    value: renderItem,\n    children: items.map(renderItem)\n  });\n}"],
  "mappings": "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",
  "names": ["React", "import_prop_types", "React", "_jsx", "React", "import_jsx_runtime", "_jsx", "React", "import_jsx_runtime", "_jsx", "React", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_jsx", "Alert", "_jsxs", "PropTypes", "React", "React", "React", "React", "React", "React", "React", "import_jsx_runtime", "_excluded", "WrappedTreeItem", "_jsx", "import_jsx_runtime", "_excluded", "useUtilityClasses", "RichTreeView", "_jsx", "PropTypes"]
}
