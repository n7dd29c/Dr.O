{
  "version": 3,
  "sources": ["../../@mui/x-tree-view/esm/useTreeItem/useTreeItem.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewLabel/useTreeViewLabel.itemPlugin.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewItems/useTreeViewItems.utils.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewItems/useTreeViewItems.selectors.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewLabel/useTreeViewLabel.selectors.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewLabel/useTreeViewLabel.js", "../../@mui/x-tree-view/esm/internals/utils/plugins.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.selectors.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.selectors.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewFocus/useTreeViewFocus.selectors.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewLazyLoading/useTreeViewLazyLoading.selectors.js", "../../@mui/x-tree-view/esm/hooks/useTreeItemUtils/useTreeItemUtils.js", "../../@mui/x-tree-view/esm/internals/TreeViewItemDepthContext/TreeViewItemDepthContext.js", "../../@mui/x-tree-view/esm/internals/utils/tree.js", "../../@mui/x-tree-view/esm/internals/hooks/useInstanceEventHandler.js", "../../@mui/x-tree-view/esm/internals/utils/cleanupTracking/TimerBasedCleanupTracking.js", "../../@mui/x-tree-view/esm/internals/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewFocus/useTreeViewFocus.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewItems/useTreeViewItems.js", "../../@mui/x-tree-view/esm/internals/utils/publishTreeViewEvent.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.utils.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewExpansion/useTreeViewExpansion.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.utils.js", "../../@mui/x-tree-view/esm/internals/plugins/useTreeViewSelection/useTreeViewSelection.itemPlugin.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useStore } from '@mui/x-internals/store';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\nimport useForkRef from '@mui/utils/useForkRef';\nimport { useTreeViewContext } from \"../internals/TreeViewProvider/index.js\";\nimport { useTreeItemUtils } from \"../hooks/useTreeItemUtils/index.js\";\nimport { TreeViewItemDepthContext } from \"../internals/TreeViewItemDepthContext/index.js\";\nimport { isTargetInDescendants } from \"../internals/utils/tree.js\";\nimport { generateTreeItemIdAttribute } from \"../internals/corePlugins/useTreeViewId/useTreeViewId.utils.js\";\nimport { focusSelectors } from \"../internals/plugins/useTreeViewFocus/index.js\";\nimport { itemsSelectors } from \"../internals/plugins/useTreeViewItems/index.js\";\nimport { idSelectors } from \"../internals/corePlugins/useTreeViewId/index.js\";\nimport { expansionSelectors } from \"../internals/plugins/useTreeViewExpansion/index.js\";\nimport { selectionSelectors } from \"../internals/plugins/useTreeViewSelection/index.js\";\nexport const useTreeItem = parameters => {\n  const {\n    runItemPlugins,\n    instance,\n    publicAPI,\n    store\n  } = useTreeViewContext();\n  const depthContext = React.useContext(TreeViewItemDepthContext);\n  const depth = useStore(store, (...params) => {\n    if (typeof depthContext === 'function') {\n      return depthContext(...params);\n    }\n    return depthContext;\n  }, parameters.itemId);\n  const {\n    id,\n    itemId,\n    label,\n    children,\n    rootRef\n  } = parameters;\n  const {\n    rootRef: pluginRootRef,\n    contentRef,\n    propsEnhancers\n  } = runItemPlugins(parameters);\n  const {\n    interactions,\n    status\n  } = useTreeItemUtils({\n    itemId,\n    children\n  });\n  const rootRefObject = React.useRef(null);\n  const contentRefObject = React.useRef(null);\n  const handleRootRef = useForkRef(rootRef, pluginRootRef, rootRefObject);\n  const handleContentRef = useForkRef(contentRef, contentRefObject);\n  const checkboxRef = React.useRef(null);\n  const treeId = useStore(store, idSelectors.treeId);\n  const isSelectionEnabledForItem = useStore(store, selectionSelectors.canItemBeSelected, itemId);\n  const isCheckboxSelectionEnabled = useStore(store, selectionSelectors.isCheckboxSelectionEnabled);\n  const idAttribute = generateTreeItemIdAttribute({\n    itemId,\n    treeId,\n    id\n  });\n  const shouldBeAccessibleWithTab = useStore(store, focusSelectors.isItemTheDefaultFocusableItem, itemId);\n  const sharedPropsEnhancerParams = {\n    rootRefObject,\n    contentRefObject,\n    interactions\n  };\n  const createRootHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (!status.focused && itemsSelectors.canItemBeFocused(store.state, itemId) && event.currentTarget === event.target) {\n      instance.focusItem(event, itemId);\n    }\n  };\n  const createRootHandleBlur = otherHandlers => event => {\n    otherHandlers.onBlur?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const rootElement = instance.getItemDOMElement(itemId);\n\n    // Don't blur the root when switching to editing mode\n    // the input that triggers the root blur can be either the relatedTarget (when entering editing state) or the target (when exiting editing state)\n    // when we enter the editing state, we focus the input -> we don't want to remove the focused item from the state\n    if (status.editing ||\n    // we can exit the editing state by clicking outside the input (within the Tree Item) or by pressing Enter or Escape -> we don't want to remove the focused item from the state in these cases\n    // we can also exit the editing state by clicking on the root itself -> want to remove the focused item from the state in this case\n    event.relatedTarget && isTargetInDescendants(event.relatedTarget, rootElement) && (event.target && event.target?.dataset?.element === 'labelInput' && isTargetInDescendants(event.target, rootElement) || event.relatedTarget?.dataset?.element === 'labelInput')) {\n      return;\n    }\n    instance.removeFocusedItem();\n  };\n  const createRootHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented || event.target?.dataset?.element === 'labelInput') {\n      return;\n    }\n    instance.handleItemKeyDown(event, itemId);\n  };\n  const createLabelHandleDoubleClick = otherHandlers => event => {\n    otherHandlers.onDoubleClick?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    interactions.toggleItemEditing();\n  };\n  const createContentHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    instance.handleItemClick(event, itemId);\n    if (event.defaultMuiPrevented || checkboxRef.current?.contains(event.target)) {\n      return;\n    }\n    if (expansionSelectors.triggerSlot(store.state) === 'content') {\n      interactions.handleExpansion(event);\n    }\n    if (!isCheckboxSelectionEnabled) {\n      interactions.handleSelection(event);\n    }\n  };\n  const createContentHandleMouseDown = otherHandlers => event => {\n    otherHandlers.onMouseDown?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    // Prevent text selection\n    if (event.shiftKey || event.ctrlKey || event.metaKey || status.disabled) {\n      event.preventDefault();\n    }\n  };\n  const createIconContainerHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (expansionSelectors.triggerSlot(store.state) === 'iconContainer') {\n      interactions.handleExpansion(event);\n    }\n  };\n  const getContextProviderProps = () => ({\n    itemId,\n    id\n  });\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n\n    // https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n    let ariaSelected;\n    if (status.selected) {\n      // - each selected node has aria-selected set to true.\n      ariaSelected = true;\n    } else if (!isSelectionEnabledForItem) {\n      // - if the tree contains nodes that are not selectable, aria-selected is not present on those nodes.\n      ariaSelected = undefined;\n    } else {\n      // - all nodes that are selectable but not selected have aria-selected set to false.\n      ariaSelected = false;\n    }\n    const props = _extends({}, externalEventHandlers, {\n      ref: handleRootRef,\n      role: 'treeitem',\n      tabIndex: shouldBeAccessibleWithTab ? 0 : -1,\n      id: idAttribute,\n      'aria-expanded': status.expandable ? status.expanded : undefined,\n      'aria-selected': ariaSelected,\n      'aria-disabled': status.disabled || undefined\n    }, externalProps, {\n      style: _extends({}, externalProps.style ?? {}, {\n        '--TreeView-itemDepth': depth\n      }),\n      onFocus: createRootHandleFocus(externalEventHandlers),\n      onBlur: createRootHandleBlur(externalEventHandlers),\n      onKeyDown: createRootHandleKeyDown(externalEventHandlers)\n    });\n    const enhancedRootProps = propsEnhancers.root?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, props, enhancedRootProps);\n  };\n  const getContentProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const props = _extends({}, externalEventHandlers, externalProps, {\n      ref: handleContentRef,\n      onClick: createContentHandleClick(externalEventHandlers),\n      onMouseDown: createContentHandleMouseDown(externalEventHandlers),\n      status\n    });\n    ['expanded', 'selected', 'focused', 'disabled', 'editing', 'editable'].forEach(key => {\n      if (status[key]) {\n        props[`data-${key}`] = '';\n      }\n    });\n    const enhancedContentProps = propsEnhancers.content?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, props, enhancedContentProps);\n  };\n  const getCheckboxProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const props = _extends({}, externalEventHandlers, {\n      ref: checkboxRef,\n      'aria-hidden': true\n    }, externalProps);\n    const enhancedCheckboxProps = propsEnhancers.checkbox?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, props, enhancedCheckboxProps);\n  };\n  const getLabelProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(externalProps));\n    const props = _extends({}, externalEventHandlers, {\n      children: label\n    }, externalProps, {\n      onDoubleClick: createLabelHandleDoubleClick(externalEventHandlers)\n    });\n    const enhancedLabelProps = propsEnhancers.label?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, enhancedLabelProps, props);\n  };\n  const getLabelInputProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const enhancedLabelInputProps = propsEnhancers.labelInput?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, externalProps, enhancedLabelInputProps);\n  };\n  const getIconContainerProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalEventHandlers, externalProps, {\n      onClick: createIconContainerHandleClick(externalEventHandlers)\n    });\n  };\n  const getErrorContainerProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalEventHandlers, externalProps);\n  };\n  const getLoadingContainerProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({\n      size: '12px',\n      thickness: 6\n    }, externalEventHandlers, externalProps);\n  };\n  const getGroupTransitionProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const response = _extends({}, externalEventHandlers, {\n      unmountOnExit: true,\n      component: 'ul',\n      role: 'group',\n      in: status.expanded,\n      children\n    }, externalProps);\n    return response;\n  };\n  const getDragAndDropOverlayProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const enhancedDragAndDropOverlayProps = propsEnhancers.dragAndDropOverlay?.(_extends({}, sharedPropsEnhancerParams, {\n      externalEventHandlers\n    })) ?? {};\n    return _extends({}, externalProps, enhancedDragAndDropOverlayProps);\n  };\n  return {\n    getContextProviderProps,\n    getRootProps,\n    getContentProps,\n    getGroupTransitionProps,\n    getIconContainerProps,\n    getCheckboxProps,\n    getLabelProps,\n    getLabelInputProps,\n    getDragAndDropOverlayProps,\n    getErrorContainerProps,\n    getLoadingContainerProps,\n    rootRef: handleRootRef,\n    status,\n    publicAPI\n  };\n};", "'use client';\n\nimport * as React from 'react';\nimport { useStore } from '@mui/x-internals/store';\nimport { useTreeViewContext } from \"../../TreeViewProvider/index.js\";\nimport { labelSelectors } from \"./useTreeViewLabel.selectors.js\";\nexport const useTreeViewLabelItemPlugin = ({\n  props\n}) => {\n  const {\n    store\n  } = useTreeViewContext();\n  const {\n    label,\n    itemId\n  } = props;\n  const [labelInputValue, setLabelInputValue] = React.useState(label);\n  const isItemEditable = useStore(store, labelSelectors.isItemEditable, itemId);\n  const isItemBeingEdited = useStore(store, labelSelectors.isItemBeingEdited, itemId);\n  React.useEffect(() => {\n    if (!isItemBeingEdited) {\n      setLabelInputValue(label);\n    }\n  }, [isItemBeingEdited, label]);\n  return {\n    propsEnhancers: {\n      label: () => ({\n        editable: isItemEditable\n      }),\n      labelInput: ({\n        externalEventHandlers,\n        interactions\n      }) => {\n        if (!isItemEditable) {\n          return {};\n        }\n        const handleKeydown = event => {\n          externalEventHandlers.onKeyDown?.(event);\n          if (event.defaultMuiPrevented) {\n            return;\n          }\n          const target = event.target;\n          if (event.key === 'Enter' && target.value) {\n            interactions.handleSaveItemLabel(event, target.value);\n          } else if (event.key === 'Escape') {\n            interactions.handleCancelItemLabelEditing(event);\n          }\n        };\n        const handleBlur = event => {\n          externalEventHandlers.onBlur?.(event);\n          if (event.defaultMuiPrevented) {\n            return;\n          }\n          if (event.target.value) {\n            interactions.handleSaveItemLabel(event, event.target.value);\n          }\n        };\n        const handleInputChange = event => {\n          externalEventHandlers.onChange?.(event);\n          setLabelInputValue(event.target.value);\n        };\n        return {\n          value: labelInputValue ?? '',\n          'data-element': 'labelInput',\n          onChange: handleInputChange,\n          onKeyDown: handleKeydown,\n          onBlur: handleBlur,\n          autoFocus: true,\n          type: 'text'\n        };\n      }\n    }\n  };\n};", "export const TREE_VIEW_ROOT_PARENT_ID = '__TREE_VIEW_ROOT_PARENT_ID__';\nexport const buildSiblingIndexes = siblings => {\n  const siblingsIndexLookup = {};\n  siblings.forEach((childId, index) => {\n    siblingsIndexLookup[childId] = index;\n  });\n  return siblingsIndexLookup;\n};\n\n/**\n * Check if an item is disabled.\n * This method should only be used in selectors that are checking if several items are disabled.\n * Otherwise, use the `itemsSelector.isItemDisabled` selector.\n * @returns\n */\nexport const isItemDisabled = (itemMetaLookup, itemId) => {\n  if (itemId == null) {\n    return false;\n  }\n  let itemMeta = itemMetaLookup[itemId];\n\n  // This can be called before the item has been added to the item map.\n  if (!itemMeta) {\n    return false;\n  }\n  if (itemMeta.disabled) {\n    return true;\n  }\n  while (itemMeta.parentId != null) {\n    itemMeta = itemMetaLookup[itemMeta.parentId];\n    if (!itemMeta) {\n      return false;\n    }\n    if (itemMeta.disabled) {\n      return true;\n    }\n  }\n  return false;\n};", "import { createSelector } from '@mui/x-internals/store';\nimport { isItemDisabled, TREE_VIEW_ROOT_PARENT_ID } from \"./useTreeViewItems.utils.js\";\nconst EMPTY_CHILDREN = [];\nexport const itemsSelectors = {\n  /**\n   * Gets the loading state for the Tree View.\n   */\n  isLoading: createSelector(state => state.items.loading),\n  /**\n   * Gets the error state for the Tree View.\n   */\n  error: createSelector(state => state.items.error),\n  /**\n   * Checks whether the disabled items are focusable.\n   */\n  disabledItemFocusable: createSelector(state => state.items.disabledItemsFocusable),\n  /**\n   * Gets the meta-information of all items.\n   */\n  itemMetaLookup: createSelector(state => state.items.itemMetaLookup),\n  /**\n   * Gets the meta-information of an item.\n   */\n  itemMeta: createSelector((state, itemId) => state.items.itemMetaLookup[itemId ?? TREE_VIEW_ROOT_PARENT_ID] ?? null),\n  /**\n   * Gets the ordered children ids of an item.\n   */\n  itemOrderedChildrenIds: createSelector((state, itemId) => state.items.itemOrderedChildrenIdsLookup[itemId ?? TREE_VIEW_ROOT_PARENT_ID] ?? EMPTY_CHILDREN),\n  /**\n   * Gets the model of an item.\n   */\n  itemModel: createSelector((state, itemId) => state.items.itemModelLookup[itemId]),\n  /**\n   * Checks whether an item is disabled.\n   */\n  isItemDisabled: createSelector((state, itemId) => isItemDisabled(state.items.itemMetaLookup, itemId)),\n  /**\n   * Gets the index of an item in its parent's children.\n   */\n  itemIndex: createSelector((state, itemId) => {\n    const itemMeta = state.items.itemMetaLookup[itemId];\n    if (itemMeta == null) {\n      return -1;\n    }\n    const parentIndexes = state.items.itemChildrenIndexesLookup[itemMeta.parentId ?? TREE_VIEW_ROOT_PARENT_ID];\n    return parentIndexes[itemMeta.id];\n  }),\n  /**\n   * Gets the id of an item's parent.\n   */\n  itemParentId: createSelector((state, itemId) => state.items.itemMetaLookup[itemId]?.parentId ?? null),\n  /**\n   * Gets the depth of an item (items at the root level have a depth of 0).\n   */\n  itemDepth: createSelector((state, itemId) => state.items.itemMetaLookup[itemId]?.depth ?? 0),\n  /**\n   * Checks whether an item can be focused.\n   */\n  canItemBeFocused: createSelector((state, itemId) => state.items.disabledItemsFocusable || !isItemDisabled(state.items.itemMetaLookup, itemId))\n};", "import { createSelector } from '@mui/x-internals/store';\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nexport const labelSelectors = {\n  /**\n   * Checks whether an item is editable.\n   */\n  isItemEditable: createSelector(state => state.label?.isItemEditable, itemsSelectors.itemModel, (isItemEditable, itemModel, _itemId) => {\n    if (!itemModel || isItemEditable == null) {\n      return false;\n    }\n    if (typeof isItemEditable === 'boolean') {\n      return isItemEditable;\n    }\n    return isItemEditable(itemModel);\n  }),\n  /**\n   * Checks whether an item is being edited.\n   */\n  isItemBeingEdited: createSelector((state, itemId) => itemId == null ? false : state.label?.editedItemId === itemId),\n  /**\n   * Checks whether any item is being edited.\n   */\n  isAnyItemBeingEdited: createSelector(state => !!state.label?.editedItemId)\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { useTreeViewLabelItemPlugin } from \"./useTreeViewLabel.itemPlugin.js\";\nimport { labelSelectors } from \"./useTreeViewLabel.selectors.js\";\nexport const useTreeViewLabel = ({\n  store,\n  params\n}) => {\n  const setEditedItem = editedItemId => {\n    if (editedItemId !== null) {\n      const isEditable = labelSelectors.isItemEditable(store.state, editedItemId);\n      if (!isEditable) {\n        return;\n      }\n    }\n    store.set('label', _extends({}, store.state.label, {\n      editedItemId\n    }));\n  };\n  const updateItemLabel = (itemId, label) => {\n    if (!label) {\n      throw new Error(['MUI X: The Tree View component requires all items to have a `label` property.', 'The label of an item cannot be empty.', itemId].join('\\n'));\n    }\n    const item = store.state.items.itemMetaLookup[itemId];\n    if (item.label === label) {\n      return;\n    }\n    store.set('items', _extends({}, store.state.items, {\n      itemMetaLookup: _extends({}, store.state.items.itemMetaLookup, {\n        [itemId]: _extends({}, item, {\n          label\n        })\n      })\n    }));\n    if (params.onItemLabelChange) {\n      params.onItemLabelChange(itemId, label);\n    }\n  };\n  useEnhancedEffect(() => {\n    store.set('label', _extends({}, store.state.items, {\n      isItemEditable: params.isItemEditable\n    }));\n  }, [store, params.isItemEditable]);\n  return {\n    instance: {\n      setEditedItem,\n      updateItemLabel\n    },\n    publicAPI: {\n      setEditedItem,\n      updateItemLabel\n    }\n  };\n};\nuseTreeViewLabel.itemPlugin = useTreeViewLabelItemPlugin;\nuseTreeViewLabel.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  isItemEditable: params.isItemEditable ?? false\n});\nuseTreeViewLabel.getInitialState = params => ({\n  label: {\n    isItemEditable: params.isItemEditable,\n    editedItemId: null\n  }\n});\nuseTreeViewLabel.params = {\n  onItemLabelChange: true,\n  isItemEditable: true\n};", "export const hasPlugin = (instance, plugin) => {\n  const plugins = instance.getAvailablePlugins();\n  return plugins.has(plugin);\n};", "import { createSelector, createSelectorMemoized } from '@mui/x-internals/store';\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nconst expandedItemMapSelector = createSelectorMemoized(state => state.expansion.expandedItems, expandedItems => {\n  const expandedItemsMap = new Map();\n  expandedItems.forEach(id => {\n    expandedItemsMap.set(id, true);\n  });\n  return expandedItemsMap;\n});\nexport const expansionSelectors = {\n  /**\n   * Gets the expanded items as provided to the component.\n   */\n  expandedItemsRaw: createSelector(state => state.expansion.expandedItems),\n  /**\n   * Get the expanded items as a Map.\n   * @param {TreeViewState<[UseTreeViewExpansionSignature]>} state The state of the tree view.\n   * @returns {TreeViewExpansionValue} The expanded items as a Map.\n   */\n  expandedItemsMap: expandedItemMapSelector,\n  /**\n   * Gets the slot that triggers the item's expansion when clicked.\n   */\n  triggerSlot: createSelector(state => state.expansion.expansionTrigger),\n  /**\n   * Checks whether an item is expanded.\n   */\n  isItemExpanded: createSelector(expandedItemMapSelector, (expandedItemsMap, itemId) => expandedItemsMap.has(itemId)),\n  /**\n   * Checks whether an item is expandable.\n   */\n  isItemExpandable: createSelector(itemsSelectors.itemMeta, (itemMeta, _itemId) => itemMeta?.expandable ?? false)\n};", "import { createSelector, createSelectorMemoized } from '@mui/x-internals/store';\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nconst selectedItemsSelector = createSelectorMemoized(state => state.selection.selectedItems, selectedItemsRaw => {\n  if (Array.isArray(selectedItemsRaw)) {\n    return selectedItemsRaw;\n  }\n  if (selectedItemsRaw != null) {\n    return [selectedItemsRaw];\n  }\n  return [];\n});\nconst selectedItemsMapSelector = createSelectorMemoized(selectedItemsSelector, selectedItems => {\n  const selectedItemsMap = new Map();\n  selectedItems.forEach(id => {\n    selectedItemsMap.set(id, true);\n  });\n  return selectedItemsMap;\n});\nexport const selectionSelectors = {\n  /**\n   * Gets the selected items as provided to the component.\n   */\n  selectedItemsRaw: createSelector(state => state.selection.selectedItems),\n  /**\n   * Gets the selected items as an array.\n   */\n  selectedItems: selectedItemsSelector,\n  /**\n   * Gets the selected items as a Map.\n   */\n  selectedItemsMap: selectedItemsMapSelector,\n  /**\n   * Checks whether selection is enabled.\n   */\n  enabled: createSelector(state => state.selection.isEnabled),\n  /**\n   * Checks whether multi selection is enabled.\n   */\n  isMultiSelectEnabled: createSelector(state => state.selection.isMultiSelectEnabled),\n  /**\n   * Checks whether checkbox selection is enabled.\n   */\n  isCheckboxSelectionEnabled: createSelector(state => state.selection.isCheckboxSelectionEnabled),\n  /**\n   * Gets the selection propagation rules.\n   */\n  propagationRules: createSelector(state => state.selection.selectionPropagation),\n  /**\n   * Checks whether an item is selected.\n   */\n  isItemSelected: createSelector(selectedItemsMapSelector, (selectedItemsMap, itemId) => selectedItemsMap.has(itemId)),\n  /**\n   * Checks whether an item can be selected (if selection is enabled and if the item is not disabled).\n   */\n  canItemBeSelected: createSelector(itemsSelectors.isItemDisabled, state => state.selection.isEnabled, (isItemDisabled, isSelectionEnabled, _itemId) => isSelectionEnabled && !isItemDisabled)\n};", "import { createSelector, createSelectorMemoized } from '@mui/x-internals/store';\nimport { selectionSelectors } from \"../useTreeViewSelection/useTreeViewSelection.selectors.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { isItemDisabled } from \"../useTreeViewItems/useTreeViewItems.utils.js\";\nimport { expansionSelectors } from \"../useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nconst defaultFocusableItemIdSelector = createSelectorMemoized(selectionSelectors.selectedItems, expansionSelectors.expandedItemsMap, itemsSelectors.itemMetaLookup, itemsSelectors.disabledItemFocusable, state => itemsSelectors.itemOrderedChildrenIds(state, null), (selectedItems, expandedItemsMap, itemMetaLookup, disabledItemsFocusable, orderedRootItemIds) => {\n  const firstSelectedItem = selectedItems.find(itemId => {\n    if (!disabledItemsFocusable && isItemDisabled(itemMetaLookup, itemId)) {\n      return false;\n    }\n    const itemMeta = itemMetaLookup[itemId];\n    return itemMeta && (itemMeta.parentId == null || expandedItemsMap.has(itemMeta.parentId));\n  });\n  if (firstSelectedItem != null) {\n    return firstSelectedItem;\n  }\n  const firstNavigableItem = orderedRootItemIds.find(itemId => disabledItemsFocusable || !isItemDisabled(itemMetaLookup, itemId));\n  if (firstNavigableItem != null) {\n    return firstNavigableItem;\n  }\n  return null;\n});\nexport const focusSelectors = {\n  /**\n   * Gets the item that should be sequentially focusable (usually with the Tab key).\n   * At any point in time, there is a single item that can be sequentially focused in the Tree View.\n   * This item is the first selected item (that is both visible and navigable), if any, or the first navigable item if no item is selected.\n   */\n  defaultFocusableItemId: defaultFocusableItemIdSelector,\n  /**\n   * Checks whether an item is the default focusable item.\n   */\n  isItemTheDefaultFocusableItem: createSelector(defaultFocusableItemIdSelector, (defaultFocusableItemId, itemId) => defaultFocusableItemId === itemId),\n  /**\n   * Gets the id of the item that is currently focused.\n   */\n  focusedItemId: createSelector(state => state.focus.focusedItemId),\n  /**\n   * Checks whether an item is focused.\n   */\n  isItemFocused: createSelector((state, itemId) => state.focus.focusedItemId === itemId)\n};", "import { createSelector } from '@mui/x-internals/store';\nexport const lazyLoadingSelectors = {\n  /**\n   * Gets the data source used to lazy load items.\n   */\n  dataSource: createSelector(state => state.lazyLoading?.dataSource),\n  /**\n   * Checks whether an item is loading.\n   */\n  isItemLoading: createSelector((state, itemId) => state.lazyLoading?.dataSource.loading[itemId] ?? false),\n  /**\n   * Checks whether an item has errors.\n   */\n  itemHasError: createSelector((state, itemId) => !!state.lazyLoading?.dataSource.errors[itemId])\n};", "'use client';\n\nimport { useStore } from '@mui/x-internals/store';\nimport { useTreeViewContext } from \"../../internals/TreeViewProvider/index.js\";\nimport { useTreeViewLabel } from \"../../internals/plugins/useTreeViewLabel/index.js\";\nimport { hasPlugin } from \"../../internals/utils/plugins.js\";\nimport { expansionSelectors } from \"../../internals/plugins/useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nimport { focusSelectors } from \"../../internals/plugins/useTreeViewFocus/useTreeViewFocus.selectors.js\";\nimport { itemsSelectors } from \"../../internals/plugins/useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { selectionSelectors } from \"../../internals/plugins/useTreeViewSelection/useTreeViewSelection.selectors.js\";\nimport { lazyLoadingSelectors } from \"../../internals/plugins/useTreeViewLazyLoading/useTreeViewLazyLoading.selectors.js\";\nimport { labelSelectors } from \"../../internals/plugins/useTreeViewLabel/useTreeViewLabel.selectors.js\";\n\n/**\n * Plugins that need to be present in the Tree View in order for `useTreeItemUtils` to work correctly.\n */\n\n/**\n * Plugins that `useTreeItemUtils` can use if they are present, but are not required.\n */\n\nexport const itemHasChildren = reactChildren => {\n  if (Array.isArray(reactChildren)) {\n    return reactChildren.length > 0 && reactChildren.some(itemHasChildren);\n  }\n  return Boolean(reactChildren);\n};\nexport const useTreeItemUtils = ({\n  itemId,\n  children\n}) => {\n  const {\n    instance,\n    store,\n    publicAPI\n  } = useTreeViewContext();\n  const isItemExpandable = useStore(store, expansionSelectors.isItemExpandable, itemId);\n  const isLoading = useStore(store, lazyLoadingSelectors.isItemLoading, itemId);\n  const hasError = useStore(store, lazyLoadingSelectors.itemHasError, itemId);\n  const isExpandable = itemHasChildren(children) || isItemExpandable;\n  const isExpanded = useStore(store, expansionSelectors.isItemExpanded, itemId);\n  const isFocused = useStore(store, focusSelectors.isItemFocused, itemId);\n  const isSelected = useStore(store, selectionSelectors.isItemSelected, itemId);\n  const isDisabled = useStore(store, itemsSelectors.isItemDisabled, itemId);\n  const isEditing = useStore(store, labelSelectors.isItemBeingEdited, itemId);\n  const isEditable = useStore(store, labelSelectors.isItemEditable, itemId);\n  const status = {\n    expandable: isExpandable,\n    expanded: isExpanded,\n    focused: isFocused,\n    selected: isSelected,\n    disabled: isDisabled,\n    editing: isEditing,\n    editable: isEditable,\n    loading: isLoading,\n    error: hasError\n  };\n  const handleExpansion = event => {\n    if (status.disabled) {\n      return;\n    }\n    if (!status.focused) {\n      instance.focusItem(event, itemId);\n    }\n    const multiple = selectionSelectors.isMultiSelectEnabled(store.state) && (event.shiftKey || event.ctrlKey || event.metaKey);\n\n    // If already expanded and trying to toggle selection don't close\n    if (status.expandable && !(multiple && expansionSelectors.isItemExpanded(store.state, itemId))) {\n      // make sure the children selection is propagated again\n      instance.setItemExpansion({\n        event,\n        itemId\n      });\n    }\n  };\n  const handleSelection = event => {\n    if (status.disabled) {\n      return;\n    }\n    if (!status.focused && !status.editing) {\n      instance.focusItem(event, itemId);\n    }\n    const multiple = selectionSelectors.isMultiSelectEnabled(store.state) && (event.shiftKey || event.ctrlKey || event.metaKey);\n    if (multiple) {\n      if (event.shiftKey) {\n        instance.expandSelectionRange(event, itemId);\n      } else {\n        instance.setItemSelection({\n          event,\n          itemId,\n          keepExistingSelection: true\n        });\n      }\n    } else {\n      instance.setItemSelection({\n        event,\n        itemId,\n        shouldBeSelected: true\n      });\n    }\n  };\n  const handleCheckboxSelection = event => {\n    const hasShift = event.nativeEvent.shiftKey;\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (isMultiSelectEnabled && hasShift) {\n      instance.expandSelectionRange(event, itemId);\n    } else {\n      instance.setItemSelection({\n        event,\n        itemId,\n        keepExistingSelection: isMultiSelectEnabled,\n        shouldBeSelected: event.target.checked\n      });\n    }\n  };\n  const toggleItemEditing = () => {\n    if (!hasPlugin(instance, useTreeViewLabel)) {\n      return;\n    }\n    if (isEditing) {\n      instance.setEditedItem(null);\n    } else {\n      instance.setEditedItem(itemId);\n    }\n  };\n  const handleSaveItemLabel = (event, newLabel) => {\n    if (!hasPlugin(instance, useTreeViewLabel)) {\n      return;\n    }\n\n    // As a side effect of `instance.focusItem` called here and in `handleCancelItemLabelEditing` the `labelInput` is blurred\n    // The `onBlur` event is triggered, which calls `handleSaveItemLabel` again.\n    // To avoid creating an unwanted behavior we need to check if the item is being edited before calling `updateItemLabel`\n    if (labelSelectors.isItemBeingEdited(store.state, itemId)) {\n      instance.updateItemLabel(itemId, newLabel);\n      toggleItemEditing();\n      instance.focusItem(event, itemId);\n    }\n  };\n  const handleCancelItemLabelEditing = event => {\n    if (!hasPlugin(instance, useTreeViewLabel)) {\n      return;\n    }\n    if (labelSelectors.isItemBeingEdited(store.state, itemId)) {\n      toggleItemEditing();\n      instance.focusItem(event, itemId);\n    }\n  };\n  const interactions = {\n    handleExpansion,\n    handleSelection,\n    handleCheckboxSelection,\n    toggleItemEditing,\n    handleSaveItemLabel,\n    handleCancelItemLabelEditing\n  };\n  return {\n    interactions,\n    status,\n    publicAPI\n  };\n};", "'use client';\n\nimport * as React from 'react';\nexport const TreeViewItemDepthContext = /*#__PURE__*/React.createContext(() => -1);\nif (process.env.NODE_ENV !== \"production\") TreeViewItemDepthContext.displayName = \"TreeViewItemDepthContext\";", "import { expansionSelectors } from \"../plugins/useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nimport { itemsSelectors } from \"../plugins/useTreeViewItems/useTreeViewItems.selectors.js\";\nconst getLastNavigableItemInArray = (state, items) => {\n  // Equivalent to Array.prototype.findLastIndex\n  let itemIndex = items.length - 1;\n  while (itemIndex >= 0 && !itemsSelectors.canItemBeFocused(state, items[itemIndex])) {\n    itemIndex -= 1;\n  }\n  if (itemIndex === -1) {\n    return undefined;\n  }\n  return items[itemIndex];\n};\nexport const getPreviousNavigableItem = (state, itemId) => {\n  const itemMeta = itemsSelectors.itemMeta(state, itemId);\n  if (!itemMeta) {\n    return null;\n  }\n  const siblings = itemsSelectors.itemOrderedChildrenIds(state, itemMeta.parentId);\n  const itemIndex = itemsSelectors.itemIndex(state, itemId);\n\n  // TODO: What should we do if the parent is not navigable?\n  if (itemIndex === 0) {\n    return itemMeta.parentId;\n  }\n\n  // Finds the previous navigable sibling.\n  let previousNavigableSiblingIndex = itemIndex - 1;\n  while (!itemsSelectors.canItemBeFocused(state, siblings[previousNavigableSiblingIndex]) && previousNavigableSiblingIndex >= 0) {\n    previousNavigableSiblingIndex -= 1;\n  }\n  if (previousNavigableSiblingIndex === -1) {\n    // If we are at depth 0, then it means all the items above the current item are not navigable.\n    if (itemMeta.parentId == null) {\n      return null;\n    }\n\n    // Otherwise, we can try to go up a level and find the previous navigable item.\n    return getPreviousNavigableItem(state, itemMeta.parentId);\n  }\n\n  // Finds the last navigable ancestor of the previous navigable sibling.\n  let currentItemId = siblings[previousNavigableSiblingIndex];\n  let lastNavigableChild = getLastNavigableItemInArray(state, itemsSelectors.itemOrderedChildrenIds(state, currentItemId));\n  while (expansionSelectors.isItemExpanded(state, currentItemId) && lastNavigableChild != null) {\n    currentItemId = lastNavigableChild;\n    lastNavigableChild = getLastNavigableItemInArray(state, itemsSelectors.itemOrderedChildrenIds(state, currentItemId));\n  }\n  return currentItemId;\n};\nexport const getNextNavigableItem = (state, itemId) => {\n  // If the item is expanded and has some navigable children, return the first of them.\n  if (expansionSelectors.isItemExpanded(state, itemId)) {\n    const firstNavigableChild = itemsSelectors.itemOrderedChildrenIds(state, itemId).find(childId => itemsSelectors.canItemBeFocused(state, childId));\n    if (firstNavigableChild != null) {\n      return firstNavigableChild;\n    }\n  }\n  let itemMeta = itemsSelectors.itemMeta(state, itemId);\n  while (itemMeta != null) {\n    // Try to find the first navigable sibling after the current item.\n    const siblings = itemsSelectors.itemOrderedChildrenIds(state, itemMeta.parentId);\n    const currentItemIndex = itemsSelectors.itemIndex(state, itemMeta.id);\n    if (currentItemIndex < siblings.length - 1) {\n      let nextItemIndex = currentItemIndex + 1;\n      while (!itemsSelectors.canItemBeFocused(state, siblings[nextItemIndex]) && nextItemIndex < siblings.length - 1) {\n        nextItemIndex += 1;\n      }\n      if (itemsSelectors.canItemBeFocused(state, siblings[nextItemIndex])) {\n        return siblings[nextItemIndex];\n      }\n    }\n\n    // If the sibling does not exist, go up a level to the parent and try again.\n    itemMeta = itemsSelectors.itemMeta(state, itemMeta.parentId);\n  }\n  return null;\n};\nexport const getLastNavigableItem = state => {\n  let itemId = null;\n  while (itemId == null || expansionSelectors.isItemExpanded(state, itemId)) {\n    const children = itemsSelectors.itemOrderedChildrenIds(state, itemId);\n    const lastNavigableChild = getLastNavigableItemInArray(state, children);\n\n    // The item has no navigable children.\n    if (lastNavigableChild == null) {\n      return itemId;\n    }\n    itemId = lastNavigableChild;\n  }\n  return itemId;\n};\nexport const getFirstNavigableItem = state => itemsSelectors.itemOrderedChildrenIds(state, null).find(itemId => itemsSelectors.canItemBeFocused(state, itemId));\n\n/**\n * This is used to determine the start and end of a selection range so\n * we can get the items between the two border items.\n *\n * It finds the items' common ancestor using\n * a naive implementation of a lowest common ancestor algorithm\n * (https://en.wikipedia.org/wiki/Lowest_common_ancestor).\n * Then compares the ancestor's 2 children that are ancestors of itemA and ItemB\n * so we can compare their indexes to work out which item comes first in a depth first search.\n * (https://en.wikipedia.org/wiki/Depth-first_search)\n *\n * Another way to put it is which item is shallower in a trémaux tree\n * https://en.wikipedia.org/wiki/Tr%C3%A9maux_tree\n */\nexport const findOrderInTremauxTree = (state, itemAId, itemBId) => {\n  if (itemAId === itemBId) {\n    return [itemAId, itemBId];\n  }\n  const itemMetaA = itemsSelectors.itemMeta(state, itemAId);\n  const itemMetaB = itemsSelectors.itemMeta(state, itemBId);\n  if (!itemMetaA || !itemMetaB) {\n    return [itemAId, itemBId];\n  }\n  if (itemMetaA.parentId === itemMetaB.id || itemMetaB.parentId === itemMetaA.id) {\n    return itemMetaB.parentId === itemMetaA.id ? [itemMetaA.id, itemMetaB.id] : [itemMetaB.id, itemMetaA.id];\n  }\n  const aFamily = [itemMetaA.id];\n  const bFamily = [itemMetaB.id];\n  let aAncestor = itemMetaA.parentId;\n  let bAncestor = itemMetaB.parentId;\n  let aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n  let bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n  let continueA = true;\n  let continueB = true;\n  while (!bAncestorIsCommon && !aAncestorIsCommon) {\n    if (continueA) {\n      aFamily.push(aAncestor);\n      aAncestorIsCommon = bFamily.indexOf(aAncestor) !== -1;\n      continueA = aAncestor !== null;\n      if (!aAncestorIsCommon && continueA) {\n        aAncestor = itemsSelectors.itemParentId(state, aAncestor);\n      }\n    }\n    if (continueB && !aAncestorIsCommon) {\n      bFamily.push(bAncestor);\n      bAncestorIsCommon = aFamily.indexOf(bAncestor) !== -1;\n      continueB = bAncestor !== null;\n      if (!bAncestorIsCommon && continueB) {\n        bAncestor = itemsSelectors.itemParentId(state, bAncestor);\n      }\n    }\n  }\n  const commonAncestor = aAncestorIsCommon ? aAncestor : bAncestor;\n  const ancestorFamily = itemsSelectors.itemOrderedChildrenIds(state, commonAncestor);\n  const aSide = aFamily[aFamily.indexOf(commonAncestor) - 1];\n  const bSide = bFamily[bFamily.indexOf(commonAncestor) - 1];\n  return ancestorFamily.indexOf(aSide) < ancestorFamily.indexOf(bSide) ? [itemAId, itemBId] : [itemBId, itemAId];\n};\nexport const getNonDisabledItemsInRange = (state, itemAId, itemBId) => {\n  const getNextItem = itemId => {\n    // If the item is expanded and has some children, return the first of them.\n    if (expansionSelectors.isItemExpandable(state, itemId) && expansionSelectors.isItemExpanded(state, itemId)) {\n      return itemsSelectors.itemOrderedChildrenIds(state, itemId)[0];\n    }\n    let itemMeta = itemsSelectors.itemMeta(state, itemId);\n    while (itemMeta != null) {\n      // Try to find the first navigable sibling after the current item.\n      const siblings = itemsSelectors.itemOrderedChildrenIds(state, itemMeta.parentId);\n      const currentItemIndex = itemsSelectors.itemIndex(state, itemMeta.id);\n      if (currentItemIndex < siblings.length - 1) {\n        return siblings[currentItemIndex + 1];\n      }\n\n      // If the item is the last of its siblings, go up a level to the parent and try again.\n      itemMeta = itemMeta.parentId ? itemsSelectors.itemMeta(state, itemMeta.parentId) : null;\n    }\n    throw new Error('Invalid range');\n  };\n  const [first, last] = findOrderInTremauxTree(state, itemAId, itemBId);\n  const items = [first];\n  let current = first;\n  while (current !== last) {\n    current = getNextItem(current);\n    if (!itemsSelectors.isItemDisabled(state, current)) {\n      items.push(current);\n    }\n  }\n  return items;\n};\nexport const getAllNavigableItems = state => {\n  let item = getFirstNavigableItem(state);\n  const navigableItems = [];\n  while (item != null) {\n    navigableItems.push(item);\n    item = getNextNavigableItem(state, item);\n  }\n  return navigableItems;\n};\n\n/**\n * Checks if the target is in a descendant of this item.\n * This can prevent from firing some logic on the ancestors on the interacted item when the event handler is on the root.\n * @param {HTMLElement} target The target to check\n * @param {HTMLElement | null} itemRoot The root of the item to check if the event target is in its descendants\n * @returns {boolean} Whether the target is in a descendant of this item\n */\nexport const isTargetInDescendants = (target, itemRoot) => {\n  return itemRoot !== target.closest('*[role=\"treeitem\"]');\n};", "'use client';\n\nimport * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseInstanceEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useInstanceEventHandler(instance, eventName, handler) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef(undefined);\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event);\n        }\n      };\n      subscription.current = instance.$$subscribeEvent(eventName, enhancedHandler);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event);\n          }\n        };\n        subscription.current = instance.$$subscribeEvent(eventName, enhancedHandler);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [instance, eventName]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useInstanceEventHandler = createUseInstanceEventHandler(registryContainer);", "// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  timeouts = (() => new Map())();\n  cleanupTimeout = (() => CLEANUP_TIMER_LOOP_MILLIS)();\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}", "export class FinalizationRegistryBasedCleanupTracking {\n  registry = (() => new FinalizationRegistry(unsubscribe => {\n    if (typeof unsubscribe === 'function') {\n      unsubscribe();\n    }\n  }))();\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n  reset() {}\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useInstanceEventHandler } from \"../../hooks/useInstanceEventHandler.js\";\nimport { focusSelectors } from \"./useTreeViewFocus.selectors.js\";\nimport { expansionSelectors } from \"../useTreeViewExpansion/useTreeViewExpansion.selectors.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nexport const useTreeViewFocus = ({\n  instance,\n  params,\n  store\n}) => {\n  const setFocusedItemId = useEventCallback(itemId => {\n    const focusedItemId = focusSelectors.focusedItemId(store.state);\n    if (focusedItemId === itemId) {\n      return;\n    }\n    store.set('focus', _extends({}, store.state.focus, {\n      focusedItemId: itemId\n    }));\n  });\n  const isItemVisible = itemId => {\n    const itemMeta = itemsSelectors.itemMeta(store.state, itemId);\n    return itemMeta && (itemMeta.parentId == null || expansionSelectors.isItemExpanded(store.state, itemMeta.parentId));\n  };\n  const innerFocusItem = (event, itemId) => {\n    const itemElement = instance.getItemDOMElement(itemId);\n    if (itemElement) {\n      itemElement.focus();\n    }\n    setFocusedItemId(itemId);\n    if (params.onItemFocus) {\n      params.onItemFocus(event, itemId);\n    }\n  };\n  const focusItem = useEventCallback((event, itemId) => {\n    // If we receive an itemId, and it is visible, the focus will be set to it\n    if (isItemVisible(itemId)) {\n      innerFocusItem(event, itemId);\n    }\n  });\n  const removeFocusedItem = useEventCallback(() => {\n    const focusedItemId = focusSelectors.focusedItemId(store.state);\n    if (focusedItemId == null) {\n      return;\n    }\n    const itemMeta = itemsSelectors.itemMeta(store.state, focusedItemId);\n    if (itemMeta) {\n      const itemElement = instance.getItemDOMElement(focusedItemId);\n      if (itemElement) {\n        itemElement.blur();\n      }\n    }\n    setFocusedItemId(null);\n  });\n  useInstanceEventHandler(instance, 'removeItem', ({\n    id\n  }) => {\n    const focusedItemId = focusSelectors.focusedItemId(store.state);\n    const defaultFocusableItemId = focusSelectors.defaultFocusableItemId(store.state);\n    if (focusedItemId === id && defaultFocusableItemId != null) {\n      innerFocusItem(null, defaultFocusableItemId);\n    }\n  });\n  const createRootHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    // if the event bubbled (which is React specific) we don't want to steal focus\n    const defaultFocusableItemId = focusSelectors.defaultFocusableItemId(store.state);\n    if (event.target === event.currentTarget && defaultFocusableItemId != null) {\n      innerFocusItem(event, defaultFocusableItemId);\n    }\n  };\n  const createRootHandleBlur = otherHandlers => event => {\n    otherHandlers.onBlur?.(event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    setFocusedItemId(null);\n  };\n  return {\n    getRootProps: otherHandlers => ({\n      onFocus: createRootHandleFocus(otherHandlers),\n      onBlur: createRootHandleBlur(otherHandlers)\n    }),\n    publicAPI: {\n      focusItem\n    },\n    instance: {\n      focusItem,\n      removeFocusedItem\n    }\n  };\n};\nuseTreeViewFocus.getInitialState = () => ({\n  focus: {\n    focusedItemId: null\n  }\n});\nuseTreeViewFocus.params = {\n  onItemFocus: true\n};", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { publishTreeViewEvent } from \"../../utils/publishTreeViewEvent.js\";\nimport { buildSiblingIndexes, TREE_VIEW_ROOT_PARENT_ID } from \"./useTreeViewItems.utils.js\";\nimport { TreeViewItemDepthContext } from \"../../TreeViewItemDepthContext/index.js\";\nimport { itemsSelectors } from \"./useTreeViewItems.selectors.js\";\nimport { idSelectors } from \"../../corePlugins/useTreeViewId/index.js\";\nimport { generateTreeItemIdAttribute } from \"../../corePlugins/useTreeViewId/useTreeViewId.utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst checkId = (id, item, itemMetaLookup) => {\n  if (id == null) {\n    throw new Error(['MUI X: The Tree View component requires all items to have a unique `id` property.', 'Alternatively, you can use the `getItemId` prop to specify a custom id for each item.', 'An item was provided without id in the `items` prop:', JSON.stringify(item)].join('\\n'));\n  }\n  if (itemMetaLookup[id] != null) {\n    throw new Error(['MUI X: The Tree View component requires all items to have a unique `id` property.', 'Alternatively, you can use the `getItemId` prop to specify a custom id for each item.', `Two items were provided with the same id in the \\`items\\` prop: \"${id}\"`].join('\\n'));\n  }\n};\nconst processItemsLookups = ({\n  disabledItemsFocusable,\n  items,\n  isItemDisabled,\n  getItemLabel,\n  getItemChildren,\n  getItemId,\n  initialDepth = 0,\n  initialParentId = null,\n  getChildrenCount,\n  ignoreChildren = false\n}) => {\n  const itemMetaLookup = {};\n  const itemModelLookup = {};\n  const itemOrderedChildrenIdsLookup = {\n    [TREE_VIEW_ROOT_PARENT_ID]: []\n  };\n  const processItem = (item, depth, parentId) => {\n    const id = getItemId ? getItemId(item) : item.id;\n    checkId(id, item, itemMetaLookup);\n    const label = getItemLabel ? getItemLabel(item) : item.label;\n    if (label == null) {\n      throw new Error(['MUI X: The Tree View component requires all items to have a `label` property.', 'Alternatively, you can use the `getItemLabel` prop to specify a custom label for each item.', 'An item was provided without label in the `items` prop:', JSON.stringify(item)].join('\\n'));\n    }\n    const children = getItemChildren ? getItemChildren(item) : item.children;\n    itemMetaLookup[id] = {\n      id,\n      label,\n      parentId,\n      idAttribute: undefined,\n      expandable: getChildrenCount ? getChildrenCount(item) > 0 : !!children?.length,\n      disabled: isItemDisabled ? isItemDisabled(item) : false,\n      depth\n    };\n    itemModelLookup[id] = item;\n    const parentIdWithDefault = parentId ?? TREE_VIEW_ROOT_PARENT_ID;\n    if (!itemOrderedChildrenIdsLookup[parentIdWithDefault]) {\n      itemOrderedChildrenIdsLookup[parentIdWithDefault] = [];\n    }\n    itemOrderedChildrenIdsLookup[parentIdWithDefault].push(id);\n\n    // if lazy loading is enabled, we don't want to process children passed through the `items` prop\n    if (!ignoreChildren) {\n      children?.forEach(child => processItem(child, depth + 1, id));\n    }\n  };\n  items?.forEach(item => processItem(item, initialDepth, initialParentId));\n  const itemChildrenIndexesLookup = {};\n  Object.keys(itemOrderedChildrenIdsLookup).forEach(parentId => {\n    itemChildrenIndexesLookup[parentId] = buildSiblingIndexes(itemOrderedChildrenIdsLookup[parentId]);\n  });\n  return {\n    disabledItemsFocusable,\n    itemMetaLookup,\n    itemModelLookup,\n    itemOrderedChildrenIdsLookup,\n    itemChildrenIndexesLookup\n  };\n};\nexport const useTreeViewItems = ({\n  instance,\n  params,\n  store\n}) => {\n  const getItem = React.useCallback(itemId => itemsSelectors.itemModel(store.state, itemId), [store]);\n  const getParentId = React.useCallback(itemId => {\n    const itemMeta = itemsSelectors.itemMeta(store.state, itemId);\n    return itemMeta?.parentId || null;\n  }, [store]);\n  const setTreeViewLoading = useEventCallback(isLoading => {\n    store.set('items', _extends({}, store.state.items, {\n      loading: isLoading\n    }));\n  });\n  const setTreeViewError = useEventCallback(error => {\n    store.set('items', _extends({}, store.state.items, {\n      error\n    }));\n  });\n  const setIsItemDisabled = useEventCallback(({\n    itemId,\n    shouldBeDisabled\n  }) => {\n    if (!store.state.items.itemMetaLookup[itemId]) {\n      return;\n    }\n    const itemMetaLookup = _extends({}, store.state.items.itemMetaLookup);\n    itemMetaLookup[itemId] = _extends({}, itemMetaLookup[itemId], {\n      disabled: shouldBeDisabled ?? !itemMetaLookup[itemId].disabled\n    });\n    store.set('items', _extends({}, store.state.items, {\n      itemMetaLookup\n    }));\n  });\n  const getItemTree = React.useCallback(() => {\n    const getItemFromItemId = itemId => {\n      const item = itemsSelectors.itemModel(store.state, itemId);\n      const itemToMutate = _extends({}, item);\n      const newChildren = itemsSelectors.itemOrderedChildrenIds(store.state, itemId);\n      if (newChildren.length > 0) {\n        itemToMutate.children = newChildren.map(getItemFromItemId);\n      } else {\n        delete itemToMutate.children;\n      }\n      return itemToMutate;\n    };\n    return itemsSelectors.itemOrderedChildrenIds(store.state, null).map(getItemFromItemId);\n  }, [store]);\n  const getItemOrderedChildrenIds = React.useCallback(itemId => itemsSelectors.itemOrderedChildrenIds(store.state, itemId), [store]);\n  const getItemDOMElement = itemId => {\n    const itemMeta = itemsSelectors.itemMeta(store.state, itemId);\n    if (itemMeta == null) {\n      return null;\n    }\n    const idAttribute = generateTreeItemIdAttribute({\n      treeId: idSelectors.treeId(store.state),\n      itemId,\n      id: itemMeta.idAttribute\n    });\n    return document.getElementById(idAttribute);\n  };\n  const areItemUpdatesPreventedRef = React.useRef(false);\n  const preventItemUpdates = React.useCallback(() => {\n    areItemUpdatesPreventedRef.current = true;\n  }, []);\n  const areItemUpdatesPrevented = React.useCallback(() => areItemUpdatesPreventedRef.current, []);\n  const addItems = ({\n    items,\n    parentId,\n    depth,\n    getChildrenCount\n  }) => {\n    if (items) {\n      const newState = processItemsLookups({\n        disabledItemsFocusable: params.disabledItemsFocusable,\n        items,\n        isItemDisabled: params.isItemDisabled,\n        getItemId: params.getItemId,\n        getItemLabel: params.getItemLabel,\n        getItemChildren: params.getItemChildren,\n        getChildrenCount,\n        initialDepth: depth,\n        initialParentId: parentId,\n        ignoreChildren: true\n      });\n      let newItems;\n      if (parentId) {\n        newItems = {\n          itemModelLookup: _extends({}, store.state.items.itemModelLookup, newState.itemModelLookup),\n          itemMetaLookup: _extends({}, store.state.items.itemMetaLookup, newState.itemMetaLookup),\n          itemOrderedChildrenIdsLookup: _extends({}, newState.itemOrderedChildrenIdsLookup, store.state.items.itemOrderedChildrenIdsLookup),\n          itemChildrenIndexesLookup: _extends({}, newState.itemChildrenIndexesLookup, store.state.items.itemChildrenIndexesLookup)\n        };\n      } else {\n        newItems = {\n          itemModelLookup: newState.itemModelLookup,\n          itemMetaLookup: newState.itemMetaLookup,\n          itemOrderedChildrenIdsLookup: newState.itemOrderedChildrenIdsLookup,\n          itemChildrenIndexesLookup: newState.itemChildrenIndexesLookup\n        };\n      }\n      Object.values(store.state.items.itemMetaLookup).forEach(item => {\n        if (!newItems.itemMetaLookup[item.id]) {\n          publishTreeViewEvent(instance, 'removeItem', {\n            id: item.id\n          });\n        }\n      });\n      store.set('items', _extends({}, store.state.items, newItems));\n    }\n  };\n  const removeChildren = parentId => {\n    if (parentId == null) {\n      store.set('items', _extends({}, store.state.items, {\n        itemMetaLookup: {},\n        itemOrderedChildrenIdsLookup: {},\n        itemChildrenIndexesLookup: {}\n      }));\n    } else {\n      const newMetaMap = Object.keys(store.state.items.itemMetaLookup).reduce((acc, key) => {\n        const item = store.state.items.itemMetaLookup[key];\n        if (item.parentId === parentId) {\n          publishTreeViewEvent(instance, 'removeItem', {\n            id: item.id\n          });\n          return acc;\n        }\n        return _extends({}, acc, {\n          [item.id]: item\n        });\n      }, {});\n      const newItemOrderedChildrenIdsLookup = _extends({}, store.state.items.itemOrderedChildrenIdsLookup);\n      const newItemChildrenIndexesLookup = _extends({}, store.state.items.itemChildrenIndexesLookup);\n      delete newItemChildrenIndexesLookup[parentId];\n      delete newItemOrderedChildrenIdsLookup[parentId];\n      store.set('items', _extends({}, store.state.items, {\n        itemMetaLookup: newMetaMap,\n        itemOrderedChildrenIdsLookup: newItemOrderedChildrenIdsLookup,\n        itemChildrenIndexesLookup: newItemChildrenIndexesLookup\n      }));\n    }\n  };\n  React.useEffect(() => {\n    if (instance.areItemUpdatesPrevented()) {\n      return;\n    }\n    const newState = processItemsLookups({\n      disabledItemsFocusable: params.disabledItemsFocusable,\n      items: params.items,\n      isItemDisabled: params.isItemDisabled,\n      getItemId: params.getItemId,\n      getItemLabel: params.getItemLabel,\n      getItemChildren: params.getItemChildren\n    });\n    Object.values(store.state.items.itemMetaLookup).forEach(item => {\n      if (!newState.itemMetaLookup[item.id]) {\n        publishTreeViewEvent(instance, 'removeItem', {\n          id: item.id\n        });\n      }\n    });\n    store.set('items', _extends({}, store.state.items, newState));\n  }, [instance, store, params.items, params.disabledItemsFocusable, params.isItemDisabled, params.getItemId, params.getItemLabel, params.getItemChildren]);\n\n  // Wrap `props.onItemClick` with `useEventCallback` to prevent unneeded context updates.\n  const handleItemClick = useEventCallback((event, itemId) => {\n    if (params.onItemClick) {\n      params.onItemClick(event, itemId);\n    }\n  });\n  return {\n    getRootProps: () => ({\n      style: {\n        '--TreeView-itemChildrenIndentation': typeof params.itemChildrenIndentation === 'number' ? `${params.itemChildrenIndentation}px` : params.itemChildrenIndentation\n      }\n    }),\n    publicAPI: {\n      getItem,\n      getItemDOMElement,\n      getItemTree,\n      getItemOrderedChildrenIds,\n      setIsItemDisabled,\n      getParentId\n    },\n    instance: {\n      getItemDOMElement,\n      preventItemUpdates,\n      areItemUpdatesPrevented,\n      addItems,\n      setTreeViewLoading,\n      setTreeViewError,\n      removeChildren,\n      handleItemClick\n    }\n  };\n};\nuseTreeViewItems.getInitialState = params => ({\n  items: _extends({}, processItemsLookups({\n    disabledItemsFocusable: params.disabledItemsFocusable,\n    items: params.items,\n    isItemDisabled: params.isItemDisabled,\n    getItemId: params.getItemId,\n    getItemLabel: params.getItemLabel,\n    getItemChildren: params.getItemChildren\n  }), {\n    loading: false,\n    error: null\n  })\n});\nuseTreeViewItems.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  disabledItemsFocusable: params.disabledItemsFocusable ?? false,\n  itemChildrenIndentation: params.itemChildrenIndentation ?? '12px'\n});\nuseTreeViewItems.wrapRoot = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsx(TreeViewItemDepthContext.Provider, {\n    value: itemsSelectors.itemDepth,\n    children: children\n  });\n};\nif (process.env.NODE_ENV !== \"production\") useTreeViewItems.wrapRoot.displayName = \"useTreeViewItems.wrapRoot\";\nuseTreeViewItems.params = {\n  disabledItemsFocusable: true,\n  items: true,\n  isItemDisabled: true,\n  getItemLabel: true,\n  getItemChildren: true,\n  getItemId: true,\n  onItemClick: true,\n  itemChildrenIndentation: true\n};", "export const publishTreeViewEvent = (instance, eventName, params) => {\n  instance.$$publishEvent(eventName, params);\n};", "export const getExpansionTrigger = ({\n  isItemEditable,\n  expansionTrigger\n}) => {\n  if (expansionTrigger) {\n    return expansionTrigger;\n  }\n  if (isItemEditable) {\n    return 'iconContainer';\n  }\n  return 'content';\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useAssertModelConsistency } from '@mui/x-internals/useAssertModelConsistency';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { expansionSelectors } from \"./useTreeViewExpansion.selectors.js\";\nimport { getExpansionTrigger } from \"./useTreeViewExpansion.utils.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { publishTreeViewEvent } from \"../../utils/publishTreeViewEvent.js\";\nexport const useTreeViewExpansion = ({\n  instance,\n  store,\n  params\n}) => {\n  useAssertModelConsistency({\n    componentName: 'Tree View',\n    propName: 'expandedItems',\n    controlled: params.expandedItems,\n    defaultValue: params.defaultExpandedItems\n  });\n  useEnhancedEffect(() => {\n    const newExpansionTrigger = getExpansionTrigger({\n      isItemEditable: params.isItemEditable,\n      expansionTrigger: params.expansionTrigger\n    });\n    if (store.state.expansion.expansionTrigger === newExpansionTrigger) {\n      return;\n    }\n    store.set('expansion', _extends({}, store.state.expansion, {\n      expansionTrigger: newExpansionTrigger\n    }));\n  }, [store, params.isItemEditable, params.expansionTrigger]);\n  const setExpandedItems = (event, value) => {\n    if (params.expandedItems === undefined) {\n      store.set('expansion', _extends({}, store.state.expansion, {\n        expandedItems: value\n      }));\n    }\n    params.onExpandedItemsChange?.(event, value);\n  };\n  const resetItemExpansion = useEventCallback(() => {\n    setExpandedItems(null, []);\n  });\n  const applyItemExpansion = useEventCallback(({\n    itemId,\n    event,\n    shouldBeExpanded\n  }) => {\n    const oldExpanded = expansionSelectors.expandedItemsRaw(store.state);\n    let newExpanded;\n    if (shouldBeExpanded) {\n      newExpanded = [itemId].concat(oldExpanded);\n    } else {\n      newExpanded = oldExpanded.filter(id => id !== itemId);\n    }\n    if (params.onItemExpansionToggle) {\n      params.onItemExpansionToggle(event, itemId, shouldBeExpanded);\n    }\n    setExpandedItems(event, newExpanded);\n  });\n  const setItemExpansion = useEventCallback(({\n    itemId,\n    event = null,\n    shouldBeExpanded\n  }) => {\n    const isExpandedBefore = expansionSelectors.isItemExpanded(store.state, itemId);\n    const cleanShouldBeExpanded = shouldBeExpanded ?? !isExpandedBefore;\n    if (isExpandedBefore === cleanShouldBeExpanded) {\n      return;\n    }\n    const eventParameters = {\n      isExpansionPrevented: false,\n      shouldBeExpanded: cleanShouldBeExpanded,\n      event,\n      itemId\n    };\n    publishTreeViewEvent(instance, 'beforeItemToggleExpansion', eventParameters);\n    if (eventParameters.isExpansionPrevented) {\n      return;\n    }\n    instance.applyItemExpansion({\n      itemId,\n      event,\n      shouldBeExpanded: cleanShouldBeExpanded\n    });\n  });\n  const isItemExpanded = useEventCallback(itemId => {\n    return expansionSelectors.isItemExpandable(store.state, itemId);\n  });\n  const expandAllSiblings = (event, itemId) => {\n    const itemMeta = itemsSelectors.itemMeta(store.state, itemId);\n    if (itemMeta == null) {\n      return;\n    }\n    const siblings = itemsSelectors.itemOrderedChildrenIds(store.state, itemMeta.parentId);\n    const diff = siblings.filter(child => expansionSelectors.isItemExpandable(store.state, child) && !expansionSelectors.isItemExpanded(store.state, child));\n    const newExpanded = expansionSelectors.expandedItemsRaw(store.state).concat(diff);\n    if (diff.length > 0) {\n      if (params.onItemExpansionToggle) {\n        diff.forEach(newlyExpandedItemId => {\n          params.onItemExpansionToggle(event, newlyExpandedItemId, true);\n        });\n      }\n      setExpandedItems(event, newExpanded);\n    }\n  };\n\n  /**\n   * Update the controlled model when the `expandedItems` prop changes.\n   */\n  useEnhancedEffect(() => {\n    const expandedItems = params.expandedItems;\n    if (expandedItems !== undefined) {\n      store.set('expansion', _extends({}, store.state.expansion, {\n        expandedItems\n      }));\n    }\n  }, [store, params.expandedItems]);\n  return {\n    publicAPI: {\n      setItemExpansion,\n      isItemExpanded\n    },\n    instance: {\n      setItemExpansion,\n      applyItemExpansion,\n      expandAllSiblings,\n      resetItemExpansion\n    }\n  };\n};\nconst DEFAULT_EXPANDED_ITEMS = [];\nuseTreeViewExpansion.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  defaultExpandedItems: params.defaultExpandedItems ?? DEFAULT_EXPANDED_ITEMS\n});\nuseTreeViewExpansion.getInitialState = params => ({\n  expansion: {\n    expandedItems: params.expandedItems === undefined ? params.defaultExpandedItems : params.expandedItems,\n    expansionTrigger: getExpansionTrigger(params)\n  }\n});\nuseTreeViewExpansion.params = {\n  expandedItems: true,\n  defaultExpandedItems: true,\n  onExpandedItemsChange: true,\n  onItemExpansionToggle: true,\n  expansionTrigger: true\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useAssertModelConsistency } from '@mui/x-internals/useAssertModelConsistency';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { findOrderInTremauxTree, getAllNavigableItems, getFirstNavigableItem, getLastNavigableItem, getNonDisabledItemsInRange } from \"../../utils/tree.js\";\nimport { propagateSelection, getAddedAndRemovedItems, getLookupFromArray } from \"./useTreeViewSelection.utils.js\";\nimport { selectionSelectors } from \"./useTreeViewSelection.selectors.js\";\nimport { useTreeViewSelectionItemPlugin } from \"./useTreeViewSelection.itemPlugin.js\";\nexport const useTreeViewSelection = ({\n  store,\n  params\n}) => {\n  useAssertModelConsistency({\n    componentName: 'Tree View',\n    propName: 'selectedItems',\n    controlled: params.selectedItems,\n    defaultValue: params.defaultSelectedItems\n  });\n  const lastSelectedItem = React.useRef(null);\n  const lastSelectedRange = React.useRef({});\n  const setSelectedItems = (event, newModel, additionalItemsToPropagate) => {\n    const oldModel = selectionSelectors.selectedItemsRaw(store.state);\n    let cleanModel;\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (isMultiSelectEnabled && (params.selectionPropagation.descendants || params.selectionPropagation.parents)) {\n      cleanModel = propagateSelection({\n        store,\n        selectionPropagation: params.selectionPropagation,\n        newModel: newModel,\n        oldModel: oldModel,\n        additionalItemsToPropagate\n      });\n    } else {\n      cleanModel = newModel;\n    }\n    if (params.onItemSelectionToggle) {\n      if (isMultiSelectEnabled) {\n        const changes = getAddedAndRemovedItems({\n          store,\n          newModel: cleanModel,\n          oldModel: oldModel\n        });\n        if (params.onItemSelectionToggle) {\n          changes.added.forEach(itemId => {\n            params.onItemSelectionToggle(event, itemId, true);\n          });\n          changes.removed.forEach(itemId => {\n            params.onItemSelectionToggle(event, itemId, false);\n          });\n        }\n      } else if (params.onItemSelectionToggle && cleanModel !== oldModel) {\n        if (oldModel != null) {\n          params.onItemSelectionToggle(event, oldModel, false);\n        }\n        if (cleanModel != null) {\n          params.onItemSelectionToggle(event, cleanModel, true);\n        }\n      }\n    }\n    if (params.selectedItems === undefined) {\n      store.set('selection', _extends({}, store.state.selection, {\n        selectedItems: cleanModel\n      }));\n    }\n    params.onSelectedItemsChange?.(event, cleanModel);\n  };\n  const setItemSelection = ({\n    itemId,\n    event = null,\n    keepExistingSelection = false,\n    shouldBeSelected\n  }) => {\n    if (!selectionSelectors.enabled(store.state)) {\n      return;\n    }\n    let newSelected;\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (keepExistingSelection) {\n      const oldSelected = selectionSelectors.selectedItems(store.state);\n      const isSelectedBefore = selectionSelectors.isItemSelected(store.state, itemId);\n      if (isSelectedBefore && (shouldBeSelected === false || shouldBeSelected == null)) {\n        newSelected = oldSelected.filter(id => id !== itemId);\n      } else if (!isSelectedBefore && (shouldBeSelected === true || shouldBeSelected == null)) {\n        newSelected = [itemId].concat(oldSelected);\n      } else {\n        newSelected = oldSelected;\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (shouldBeSelected === false || shouldBeSelected == null && selectionSelectors.isItemSelected(store.state, itemId)) {\n        newSelected = isMultiSelectEnabled ? [] : null;\n      } else {\n        newSelected = isMultiSelectEnabled ? [itemId] : itemId;\n      }\n    }\n    setSelectedItems(event, newSelected,\n    // If shouldBeSelected === selectionSelectors.isItemSelected(store, itemId), we still want to propagate the select.\n    // This is useful when the element is in an indeterminate state.\n    [itemId]);\n    lastSelectedItem.current = itemId;\n    lastSelectedRange.current = {};\n  };\n  const selectRange = (event, [start, end]) => {\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    let newSelectedItems = selectionSelectors.selectedItems(store.state).slice();\n\n    // If the last selection was a range selection,\n    // remove the items that were part of the last range from the model\n    if (Object.keys(lastSelectedRange.current).length > 0) {\n      newSelectedItems = newSelectedItems.filter(id => !lastSelectedRange.current[id]);\n    }\n\n    // Add to the model the items that are part of the new range and not already part of the model.\n    const selectedItemsLookup = getLookupFromArray(newSelectedItems);\n    const range = getNonDisabledItemsInRange(store.state, start, end);\n    const itemsToAddToModel = range.filter(id => !selectedItemsLookup[id]);\n    newSelectedItems = newSelectedItems.concat(itemsToAddToModel);\n    setSelectedItems(event, newSelectedItems);\n    lastSelectedRange.current = getLookupFromArray(range);\n  };\n  const expandSelectionRange = (event, itemId) => {\n    if (lastSelectedItem.current != null) {\n      const [start, end] = findOrderInTremauxTree(store.state, itemId, lastSelectedItem.current);\n      selectRange(event, [start, end]);\n    }\n  };\n  const selectRangeFromStartToItem = (event, itemId) => {\n    selectRange(event, [getFirstNavigableItem(store.state), itemId]);\n  };\n  const selectRangeFromItemToEnd = (event, itemId) => {\n    selectRange(event, [itemId, getLastNavigableItem(store.state)]);\n  };\n  const selectAllNavigableItems = event => {\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    const navigableItems = getAllNavigableItems(store.state);\n    setSelectedItems(event, navigableItems);\n    lastSelectedRange.current = getLookupFromArray(navigableItems);\n  };\n  const selectItemFromArrowNavigation = (event, currentItem, nextItem) => {\n    const isMultiSelectEnabled = selectionSelectors.isMultiSelectEnabled(store.state);\n    if (!isMultiSelectEnabled) {\n      return;\n    }\n    let newSelectedItems = selectionSelectors.selectedItems(store.state).slice();\n    if (Object.keys(lastSelectedRange.current).length === 0) {\n      newSelectedItems.push(nextItem);\n      lastSelectedRange.current = {\n        [currentItem]: true,\n        [nextItem]: true\n      };\n    } else {\n      if (!lastSelectedRange.current[currentItem]) {\n        lastSelectedRange.current = {};\n      }\n      if (lastSelectedRange.current[nextItem]) {\n        newSelectedItems = newSelectedItems.filter(id => id !== currentItem);\n        delete lastSelectedRange.current[currentItem];\n      } else {\n        newSelectedItems.push(nextItem);\n        lastSelectedRange.current[nextItem] = true;\n      }\n    }\n    setSelectedItems(event, newSelectedItems);\n  };\n  useEnhancedEffect(() => {\n    store.set('selection', {\n      selectedItems: params.selectedItems === undefined ? store.state.selection.selectedItems : params.selectedItems,\n      isEnabled: !params.disableSelection,\n      isMultiSelectEnabled: params.multiSelect,\n      isCheckboxSelectionEnabled: params.checkboxSelection,\n      selectionPropagation: {\n        descendants: params.selectionPropagation.descendants,\n        parents: params.selectionPropagation.parents\n      }\n    });\n  }, [store, params.selectedItems, params.multiSelect, params.checkboxSelection, params.disableSelection, params.selectionPropagation.descendants, params.selectionPropagation.parents]);\n  return {\n    getRootProps: () => ({\n      'aria-multiselectable': params.multiSelect\n    }),\n    publicAPI: {\n      setItemSelection\n    },\n    instance: {\n      setItemSelection,\n      selectAllNavigableItems,\n      expandSelectionRange,\n      selectRangeFromStartToItem,\n      selectRangeFromItemToEnd,\n      selectItemFromArrowNavigation\n    }\n  };\n};\nuseTreeViewSelection.itemPlugin = useTreeViewSelectionItemPlugin;\nconst DEFAULT_SELECTED_ITEMS = [];\nconst EMPTY_SELECTION_PROPAGATION = {};\nuseTreeViewSelection.applyDefaultValuesToParams = ({\n  params\n}) => _extends({}, params, {\n  disableSelection: params.disableSelection ?? false,\n  multiSelect: params.multiSelect ?? false,\n  checkboxSelection: params.checkboxSelection ?? false,\n  defaultSelectedItems: params.defaultSelectedItems ?? (params.multiSelect ? DEFAULT_SELECTED_ITEMS : null),\n  selectionPropagation: params.selectionPropagation ?? EMPTY_SELECTION_PROPAGATION\n});\nuseTreeViewSelection.getInitialState = params => ({\n  selection: {\n    selectedItems: params.selectedItems === undefined ? params.defaultSelectedItems : params.selectedItems,\n    isEnabled: !params.disableSelection,\n    isMultiSelectEnabled: params.multiSelect,\n    isCheckboxSelectionEnabled: params.checkboxSelection,\n    selectionPropagation: params.selectionPropagation\n  }\n});\nuseTreeViewSelection.params = {\n  disableSelection: true,\n  multiSelect: true,\n  checkboxSelection: true,\n  defaultSelectedItems: true,\n  selectedItems: true,\n  onSelectedItemsChange: true,\n  onItemSelectionToggle: true,\n  selectionPropagation: true\n};", "import { selectionSelectors } from \"./useTreeViewSelection.selectors.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nexport const getLookupFromArray = array => {\n  const lookup = {};\n  array.forEach(itemId => {\n    lookup[itemId] = true;\n  });\n  return lookup;\n};\nexport const getAddedAndRemovedItems = ({\n  store,\n  oldModel,\n  newModel\n}) => {\n  const newModelMap = new Map();\n  newModel.forEach(id => {\n    newModelMap.set(id, true);\n  });\n  return {\n    added: newModel.filter(itemId => !selectionSelectors.isItemSelected(store.state, itemId)),\n    removed: oldModel.filter(itemId => !newModelMap.has(itemId))\n  };\n};\nexport const propagateSelection = ({\n  store,\n  selectionPropagation,\n  newModel,\n  oldModel,\n  additionalItemsToPropagate\n}) => {\n  if (!selectionPropagation.descendants && !selectionPropagation.parents) {\n    return newModel;\n  }\n  let shouldRegenerateModel = false;\n  const newModelLookup = getLookupFromArray(newModel);\n  const changes = getAddedAndRemovedItems({\n    store,\n    newModel,\n    oldModel\n  });\n  additionalItemsToPropagate?.forEach(itemId => {\n    if (newModelLookup[itemId]) {\n      if (!changes.added.includes(itemId)) {\n        changes.added.push(itemId);\n      }\n    } else if (!changes.removed.includes(itemId)) {\n      changes.removed.push(itemId);\n    }\n  });\n  changes.added.forEach(addedItemId => {\n    if (selectionPropagation.descendants) {\n      const selectDescendants = itemId => {\n        if (itemId !== addedItemId) {\n          shouldRegenerateModel = true;\n          newModelLookup[itemId] = true;\n        }\n        itemsSelectors.itemOrderedChildrenIds(store.state, itemId).forEach(selectDescendants);\n      };\n      selectDescendants(addedItemId);\n    }\n    if (selectionPropagation.parents) {\n      const checkAllDescendantsSelected = itemId => {\n        if (!newModelLookup[itemId]) {\n          return false;\n        }\n        const children = itemsSelectors.itemOrderedChildrenIds(store.state, itemId);\n        return children.every(checkAllDescendantsSelected);\n      };\n      const selectParents = itemId => {\n        const parentId = itemsSelectors.itemParentId(store.state, itemId);\n        if (parentId == null) {\n          return;\n        }\n        const siblings = itemsSelectors.itemOrderedChildrenIds(store.state, parentId);\n        if (siblings.every(checkAllDescendantsSelected)) {\n          shouldRegenerateModel = true;\n          newModelLookup[parentId] = true;\n          selectParents(parentId);\n        }\n      };\n      selectParents(addedItemId);\n    }\n  });\n  changes.removed.forEach(removedItemId => {\n    if (selectionPropagation.parents) {\n      let parentId = itemsSelectors.itemParentId(store.state, removedItemId);\n      while (parentId != null) {\n        if (newModelLookup[parentId]) {\n          shouldRegenerateModel = true;\n          delete newModelLookup[parentId];\n        }\n        parentId = itemsSelectors.itemParentId(store.state, parentId);\n      }\n    }\n    if (selectionPropagation.descendants) {\n      const deSelectDescendants = itemId => {\n        if (itemId !== removedItemId) {\n          shouldRegenerateModel = true;\n          delete newModelLookup[itemId];\n        }\n        itemsSelectors.itemOrderedChildrenIds(store.state, itemId).forEach(deSelectDescendants);\n      };\n      deSelectDescendants(removedItemId);\n    }\n  });\n  return shouldRegenerateModel ? Object.keys(newModelLookup) : newModel;\n};", "import { createSelector, useStore } from '@mui/x-internals/store';\nimport { useTreeViewContext } from \"../../TreeViewProvider/index.js\";\nimport { itemsSelectors } from \"../useTreeViewItems/useTreeViewItems.selectors.js\";\nimport { selectionSelectors } from \"./useTreeViewSelection.selectors.js\";\nconst selectorCheckboxSelectionStatus = createSelector((state, itemId) => {\n  if (selectionSelectors.isItemSelected(state, itemId)) {\n    return 'checked';\n  }\n  let hasSelectedDescendant = false;\n  let hasUnSelectedDescendant = false;\n  const traverseDescendants = itemToTraverseId => {\n    if (itemToTraverseId !== itemId) {\n      if (selectionSelectors.isItemSelected(state, itemToTraverseId)) {\n        hasSelectedDescendant = true;\n      } else {\n        hasUnSelectedDescendant = true;\n      }\n    }\n    itemsSelectors.itemOrderedChildrenIds(state, itemToTraverseId).forEach(traverseDescendants);\n  };\n  traverseDescendants(itemId);\n  if (hasSelectedDescendant && hasUnSelectedDescendant) {\n    return 'indeterminate';\n  }\n  const shouldSelectBasedOnDescendants = selectionSelectors.propagationRules(state).parents;\n  return shouldSelectBasedOnDescendants && hasSelectedDescendant && !hasUnSelectedDescendant ? 'checked' : 'empty';\n});\nexport const useTreeViewSelectionItemPlugin = ({\n  props\n}) => {\n  const {\n    itemId\n  } = props;\n  const {\n    store\n  } = useTreeViewContext();\n  const isCheckboxSelectionEnabled = useStore(store, selectionSelectors.isCheckboxSelectionEnabled);\n  const isItemSelectionEnabled = useStore(store, selectionSelectors.canItemBeSelected, itemId);\n  const checkboxSelectionStatus = useStore(store, selectorCheckboxSelectionStatus, itemId);\n  return {\n    propsEnhancers: {\n      checkbox: ({\n        externalEventHandlers,\n        interactions\n      }) => {\n        const handleChange = event => {\n          externalEventHandlers.onChange?.(event);\n          if (event.defaultMuiPrevented) {\n            return;\n          }\n          if (!selectionSelectors.canItemBeSelected(store.state, itemId)) {\n            return;\n          }\n          interactions.handleCheckboxSelection(event);\n        };\n        return {\n          tabIndex: -1,\n          onChange: handleChange,\n          visible: isCheckboxSelectionEnabled,\n          disabled: !isItemSelectionEnabled,\n          checked: checkboxSelectionStatus === 'checked',\n          indeterminate: checkboxSelectionStatus === 'indeterminate'\n        };\n      }\n    }\n  };\n};"],
  "mappings": "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",
  "names": ["React", "isItemDisabled", "React", "React", "registryContainer", "useInstanceEventHandler", "React", "isItemDisabled", "_jsx", "React"]
}
