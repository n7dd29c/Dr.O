import { TreeViewState } from "../../models/index.js";
import { UseTreeViewSelectionSignature } from "./useTreeViewSelection.types.js";
export declare const selectionSelectors: {
  /**
   * Gets the selected items as provided to the component.
   */
  selectedItemsRaw: (state: TreeViewState<[UseTreeViewSelectionSignature]>) => string | string[] | null;
  /**
   * Gets the selected items as an array.
   */
  selectedItems: (args_0: import("../../corePlugins/useTreeViewId/useTreeViewId.types.js").UseTreeViewIdState & import("./useTreeViewSelection.types.js").UseTreeViewSelectionState & Partial<{}>) => string[];
  /**
   * Gets the selected items as a Map.
   */
  selectedItemsMap: (args_0: import("../../corePlugins/useTreeViewId/useTreeViewId.types.js").UseTreeViewIdState & import("./useTreeViewSelection.types.js").UseTreeViewSelectionState & Partial<{}>) => Map<string, true>;
  /**
   * Checks whether selection is enabled.
   */
  enabled: (state: TreeViewState<[UseTreeViewSelectionSignature]>) => boolean;
  /**
   * Checks whether multi selection is enabled.
   */
  isMultiSelectEnabled: (state: TreeViewState<[UseTreeViewSelectionSignature]>) => boolean;
  /**
   * Checks whether checkbox selection is enabled.
   */
  isCheckboxSelectionEnabled: (state: TreeViewState<[UseTreeViewSelectionSignature]>) => boolean;
  /**
   * Gets the selection propagation rules.
   */
  propagationRules: (state: TreeViewState<[UseTreeViewSelectionSignature]>) => import("../../../index.js").TreeViewSelectionPropagation;
  /**
   * Checks whether an item is selected.
   */
  isItemSelected: (args_0: import("../../corePlugins/useTreeViewId/useTreeViewId.types.js").UseTreeViewIdState & import("./useTreeViewSelection.types.js").UseTreeViewSelectionState & Partial<{}>, itemId: string) => boolean;
  /**
   * Checks whether an item can be selected (if selection is enabled and if the item is not disabled).
   */
  canItemBeSelected: (args_0: import("../../corePlugins/useTreeViewId/useTreeViewId.types.js").UseTreeViewIdState & import("./useTreeViewSelection.types.js").UseTreeViewSelectionState & Partial<{}>, _itemId: string) => boolean;
};